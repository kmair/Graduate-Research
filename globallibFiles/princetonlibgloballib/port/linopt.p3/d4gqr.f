      SUBROUTINE D4GQR(K, M, N, Q, R, INDEX,RHS)
C
C THIS SUBROUTINE UPDATES THE QR DECOMPOSITION OF A MATRIX WHEN
C COLUMN INDEX IS DELETED FROM THE MATRIX
C
      INTEGER M
      INTEGER N, INDEX
      REAL Q(K, 1), R( 1), RHS(K)
      INTEGER I
      REAL BETA, ALPHA
C/6S
C     IF (M .LE. 0 .OR. N .LE. 0 .OR. M .LT. N) CALL SETERR(
C    1   25HD4GQR - INVALID DIMENSION, 25, 1, 2)
C     IF (INDEX .LE. 0 .OR. N .LT. INDEX) CALL SETERR(
C    1   21HD4GQR - INVALID INDEX, 21, 2, 2)
C/7S
      IF (M .LE. 0 .OR. N .LE. 0 .OR. M .LT. N) CALL SETERR(
     1   'D4GQR - INVALID DIMENSION', 25, 1, 2)
      IF (INDEX .LE. 0 .OR. N .LT. INDEX) CALL SETERR(
     1   'D4GQR - INVALID INDEX', 21, 2, 2)
C/
       N=N-1
C
C ELIMINATE UNWANTED SUBDIAGONAL ELEMENTS
C
      IF (INDEX.GT.N) RETURN
      IS =(INDEX*(INDEX+1))/2+INDEX
      DO 10 I=INDEX,N
         CALL SROTG(R(IS), R(IS+1), ALPHA, BETA)
         CALL SROT(1,RHS(I),1,RHS(I+1),1,ALPHA,BETA)
         CALL SROT(M, Q(I, 1), K, Q(I+1, 1), K, ALPHA, BETA)
         NMI=N-I
         IS=IS+I+2
         CALL SROT2(NMI,R(IS-1),I+2,R(IS),I+2,ALPHA,BETA)
 10    CONTINUE
C
C REARRANGE R
C
       IS2=(INDEX*(INDEX+1))/2+1
       IS1=IS2-INDEX
       DO 20 I=INDEX,N
          CALL SCOPY(I,R(IS2),1,R(IS1),1)
          IS1=IS1+I
          IS2=IS2+I+1
 20    CONTINUE
      RETURN
      END
