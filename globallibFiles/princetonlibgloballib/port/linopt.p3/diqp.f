      SUBROUTINE DIQP(N, X, Q, IQ, C, M, A, IA, B, BL, BU,
     1   IPRINT, MAXITR, IEQ)
      INTEGER IA, IQ, N
      INTEGER M, IPRINT, MAXITR
      DOUBLE PRECISION X(N), Q(IQ, N), C(N), A(IA, N), B(M), BL(N)
      DOUBLE PRECISION BU(N)
      DOUBLE PRECISION EPSI
      INTEGER ID, IE, IG, IT, JT
      INTEGER IY, IRES, IAC, I, INJ, IZL
      INTEGER IJSIM, IIRES
      INTEGER IEQ, IWUNIT
      DOUBLE PRECISION DDOT, R, D1MACH
      INTEGER IISIMP, IEXTRA, ILIM, IND, I1MACH
      INTEGER ICT, IRCT, INDI, INDD,IIND
C
      DOUBLE PRECISION DSTAK(500)
      COMMON /CSTAK/DSTAK
      INTEGER ISTAK(1000)
      EQUIVALENCE (DSTAK(1), ISTAK(1))
C
C THIS SUBROUTINE SOLVES THE INDEFINITE QUADRATIC
C PROGRAMMING PROBLEM OF MINIMIZING
C           T      T
C          X QX/2+C X
C SUCH THAT
C        AX.GE.B
C   AND
C         BL(I).LE.X(I).LE.BU(I).I=1,...,N
C
C PARAMETERS ON INPUT
C   N       ORDER OF PROBLEM
C   X       INITIAL GUESS, NEED NOT SATISFY CONSTRAINTS
C   Q       N X N SYMMETRIC MATRIX,MAY BE INDEFINITE.
C           MUST BE FILLED IN COMPLETELY, STRICTLY
C           LOWER TRIANGLE DESTROYED
C   IQ      LEADING DIMENSION OF Q. MUST BE AT LEAST N
C   C       VECTOR IN LINEAR TERM OF FUNCTION TO BE MINIMIZED
C   IEQ     NUMBER OF LINEAR EQUALITY CONSTRAINTS
C   M       NUMBER OF LINEAR INEQUALITY CONSTRAINTS
C   A       M X N MATRIX OF LINEAR CONSTRAINTS
C   IA      LEADING DIMENSION OF A, MUST BE AT LEAST M
C   B       RIGHT HAND SIDE VECTOR OF CONSTRAINTS
C   BL      LOWER BOUND ON VARIABLES
C   BU      UPPER BOUND ON VARIABLES
C   IPRINT  IF IPRINT IS GREATER THAN 0,THEN THE FUNCTION,GRADIENT,
C           APPROXIMATE SOLUTION WILL BE PRINTED EACH ITERATION.
C           FEASABILITY CONDITIONS FROM DFEAS WILL ALSO BE PRINTED.
C  MAXITR   MAXIMUM NUMBER OF ITERATIONS PERMITTED
C
C OUTPUT PARAMETERS
C   X       SOLUTION OF THE PROBLEM
C
C SCRATCH STORAGE (ALLOCATED FROM THE PORT STACK)
C DSTAK     DOUBLE PRECISION ARRAY OF LENGTH AT LEAST M+(4+N)N LOCATIONS
C           (UNLESS (N.GT.M) WHEN (5+N)N LOCATIONS WILL BE ALLOCATED)
C ISTAK     INTEGER ARRAY OF LENGTH AT LEAST 4N + M LOCATIONS
C       ISTAK(1...N) = INEQUALITY, EQUALITY FOR UPPER AND LOWER BOUNDS
C       ISTAK(N+1...N+M) = EQUALITY, INEQUALITY FOR MATRIX CONSTRAINTS
C       ISTAK(N+M+1...3N+M) = ISIMP FOR FEASA
C       ISTAK(3N+M+1...4N+M) = STORAGE SPACE FOR READING OFF ISIMP
C CHECK FOR ERRORS
C
        CALL ENTER(1)
        IWUNIT = I1MACH(2)
        EPSI = D1MACH(4)
C/6S
C     IF ((N .LT. 1).OR.(M .LT. 0))
C    1  CALL SETERR(21HDIQP-N.LT.1 OR M.LT.0,21,1,2)
C     IF (MAXITR .LT. 1) CALL SETERR(16HDIQP-MAXITR.LT.1,16,2,2)
C     IF (IQ .LT. N) CALL SETERR(12HDIQP-IQ.LT.N,12,3,2)
C     IF (IA .LT. M) CALL SETERR(12HDIQP-IA.LT.M,12,4,2)
C     IF ((IEQ .GT. N).OR.(IEQ .GT. M).OR.(IEQ .LT. 0))
C    1  CALL SETERR(37HDIQP-IEQ.GT.N OR IEQ.GT.M OR IEQ.LT.0,37,5,2)
C/7S
      IF ((N .LT. 1).OR.(M .LT. 0))
     1  CALL SETERR('DIQP-N.LT.1 OR M.LT.0',21,1,2)
      IF (MAXITR .LT. 1) CALL SETERR('DIQP-MAXITR.LT.1',16,2,2)
      IF (IQ .LT. N) CALL SETERR('DIQP-IQ.LT.N',12,3,2)
      IF (IA .LT. M) CALL SETERR('DIQP-IA.LT.M',12,4,2)
      IF ((IEQ .GT. N).OR.(IEQ .GT. M).OR.(IEQ .LT. 0))
     1  CALL SETERR('DIQP-IEQ.GT.N OR IEQ.GT.M OR IEQ.LT.0',37,5,2)
C/
C USE FEASA TO GET A FEASIBLE SOLUTION (OR CHECK FEASIBILITY OF CURRENT
C SOLUTION.)
C
C GET SPACE FOR DFEASA AND TRANSLATION
      IAC = ISTKGT(M,2)
      IISIMP = ISTKGT(2*N,2)
      INDD = ISTKGT(2*N,4)
      CALL DQ6INT(A, M, N, IA, B, X, BL, BU, DSTAK(INDD),
     1   ISTAK(IISIMP),
     2   ISTAK(IAC), IAS, IAG, MAXITR, IPRINT, IEQ, IWUNIT)
C
      CALL ISTKRL(1)
      IF ((NERROR(NERR).NE.6).AND.(NERROR(NERR).NE.8)
     1    .AND.(NERROR(NERR).NE.9))  GO TO 301
      CALL ERROFF
C/6S
C     IF (NERROR(NERR).EQ.6) CALL SETERR (
C    1    49HDIQP-NO FEASIBLE SOLUTION AFTER MAXITR ITERATIONS,49,8,1)
C     IF (NERROR(NERR).EQ.8) CALL SETERR (17HDIQP-NO FEAS. SOL,17,9,1)
C     IF (NERROR(NERR).EQ.9) CALL SETERR (18HDIQP-COND. PROBLEM,18,10,1)
C/7S
      IF (NERROR(NERR).EQ.6) CALL SETERR (
     1    'DIQP-NO FEASIBLE SOLUTION AFTER MAXITR ITERATIONS',49,8,1)
      IF (NERROR(NERR).EQ.8) CALL SETERR ('DIQP-NO FEAS. SOL',17,9,1)
      IF (NERROR(NERR).EQ.9) CALL SETERR ('DIQP-COND. PROBLEM',18,10,1)
C/
      CALL LEAVE
      RETURN
 301  CONTINUE
      IRCT = 2*M + (3+N) * N
      IF (N.GT.M) IRCT = (4+N) * N + M
      ICT = 2*N
      INDD = ISTKGT(IRCT, 4)
      INDI = ISTKGT(ICT, 2)
      IZL = INDD
      IY = IZL+N*N
      IE = IY+N
      ID = IE+N
      IG = ID+N
      MN=M
      IF(N.GT.M) MN=N
      IRES = IG+MN
      IJSIM = INDI
      INJ = IJSIM
      IEXTRA = IJSIM+N
      JT = IEXTRA-1
C
      ILIM = IEXTRA+N-1
      DO  1 I = IEXTRA, ILIM
         ISTAK(I) = 0
 1    CONTINUE
C
      IF (IAS.EQ.0) GO TO 19
      DO  2 I = 1, IAS
         IIND = IISIMP + I - 1
         IND = IEXTRA + IABS(ISTAK(IIND)) - 1
         ISTAK(IND) = 1
 2    CONTINUE
 19   CONTINUE
      DO  3 I = 1,N
         IND = IEXTRA + I - 1
         IF(ISTAK(IND).NE.1) GO TO 4
         ISTAK(JT) = I
         JT = JT - 1
         GO TO 3
 4       ISTAK(INJ) = I
         INJ = INJ + 1
 3    CONTINUE
      IT = IAG + IEQ
      JT = N - IAS
      ILIM = 2*N + INDD
      DO 8 I=INDD,ILIM
        DSTAK(I) = 0.
 8    CONTINUE
      IIRES = IRES - 1
      IF (M.LT.1) GO TO 9
      DO 10 I=1,M
        R = DDOT(N,A(I,1),IA,X,1) - B(I)
        IIRES = IIRES + 1
        IF (R.LT.0.) R = 0.
        DSTAK(IIRES) = R
 10   CONTINUE
 9    CONTINUE
C
      CALL DQ6IQP(X, N, A, IA, DSTAK(IRES), M, Q, IQ, C, BL, BU, IT
     1   , JT, ISTAK(IJSIM), ISTAK(IAC), DSTAK(ID), DSTAK(IE)
     2   , DSTAK(IY), DSTAK(IZL), DSTAK(IG), IPRINT, MAXITR
     3   , IEQ, IERR, IWUNIT, EPSI,B)
C/6S
C     IF (IERR.EQ.1) CALL SETERR(
C    1   40HDIQP-NO SOLUTION AFTER MAXITR ITERATIONS,40,6,1)
C     IF (IERR.EQ.2) CALL SETERR(23HDIQP-UNBOUNDED SOLUTION,23,7,1)
C/7S
      IF (IERR.EQ.1) CALL SETERR(
     1   'DIQP-NO SOLUTION AFTER MAXITR ITERATIONS',40,6,1)
      IF (IERR.EQ.2) CALL SETERR('DIQP-UNBOUNDED SOLUTION',23,7,1)
C/
      CALL LEAVE
      RETURN
      END
