       SUBROUTINE  DFEAS(A,M,N,IA,B,X,MAXITR,S,SIMP,
     1   ISIMP,E)
C THIS SUBROUTINE DETERMINES IF POSSIBLE WHETHER A POINT
C SATISFIES A SYSTEM OF LINEAR INEQUALITY AND EQUALITY
C CONSTRAINTS AND OPTIONAL LOWER AND UPPER BOUND CONSTRAINTS
C ON THE VARIABLES. THE
C ALGORITHM IS SIMPLEX-LIKE BUT INITIALLY PROJECTED GRADIENT
C STEPS MAY BE TAKEN-I.E. ONE CAN CUT ACROSS THE  FEASIBLE
C REGION RATHER THAN VISITING VERTICES. THE QR DECOMPOSITION
C OF THE BASIS MATRIX IS SAVED. NO ATTEMPT IS MADE TO UTILIZE
C THE SPARSE STRUCTURE OF THE CONSTRAINTS EXCEPT FOR THE LOWER AND
C UPPER BOUND CONSTRAINTS.
C THE PARAMETERS HAVE THE FOLLOWING INTERPRETATION
C
C A     THE MATRIX OF CONSTRAINTS WITH LEADING DIMENSION IA
C M     NUMBER OF GENERAL EQUALITY AND INEQUALITY CONSTRAINTS
C N     NUMBER OF UNKNOWNS
C IA    ROW DIMENSION OF THE A MATRIX
C B     INPUT VECTOR LENGTH M OF RIGHT HAND SIDE OF GENERAL CONSTRAINTS
C X     REAL VECTOR LENGTH N, ON INPUT APPROXIMATION TO THE SOLUTION,
C       WHICH NEED NOT BE  FEASIBLE, ON OUTPUT-THE SOLUTION
C MAXITR MAXIMUM NUMBER OF ITERATIONS TOLERATED
C S     INTEGER INPUT SCALAR OF NUMBER OF SIMPLE CONSTRAINTS
C SIMP  REAL INPUT VECTOR OF LENGTH S HAVING SIMPLE CONSTRAINTS
C ISIMP INTEGER INPUT VECTOR TELLING THE ELEMENT OF X THE SIMPLE
C       CONSTRAINT PERTAINS, IF NEGATIVE IT IS AN UPPER BOUND
C       IF SIMP(1)=-5, SIMP(2)=10.0D0, ISIMP(1)=3, ISIMP(2)=-3
C       THE SOLUTION MUST SATISFY X(3) .GE. -5.0,X(3) .LE. 10.0D0
C E     INTEGER INPUT SCALAR GIVING THE NUMBER OF EQUALITY CONSTRAINTS
C       IT IS ASSUMED THAT THE FIRST E CONSTRAINTS ARE EQUALITY CONS.
C
C STORAGE TAKEN FROM PORT STACK -3N*N/2+4M+11N/2 REAL LOCATIONS
C      AND 2M+N+S INTEGER LOCATIONS
       INTEGER ISIMP(1), M, E, S, N
       EXTERNAL DLPMAN,DLPRNT
       INTEGER MAXITR
       DOUBLE PRECISION A(IA,N),B(1),X(N),SIMP(1)
       COMMON /CSTAK/ DSTAK
       DOUBLE PRECISION DSTAK(500)
       INTEGER ISTAK(1000),ISTKGT
       DOUBLE PRECISION WS(500)
       EQUIVALENCE (DSTAK(1),ISTAK(1))
       EQUIVALENCE(DSTAK(1),WS(1))
C/6S
C      IF (N.LT.1)CALL SETERR(13H DFEAS-N.LT.1,13,1,2)
C      IF (M.LT.0.OR.S.LT.0.OR.E.LT.0)CALL SETERR(
C    1 20H DFEAS-M,S,OR E.LT.0,20,2,2)
C      IF(E.GT.M.OR.S.GT.2*N)CALL SETERR(
C    1 24H DFEAS-E.GT.M.OR.S.GT.2N,24,3,2)
C      IF (IA.LT.M)CALL SETERR(14HDFEAS -IA.LT.M,14,4,2)
C      IF (MAXITR.LT.1)CALL SETERR(
C    1 18H DFEAS-MAXITR.LT.1,18,5,2)
C/7S
       IF (N.LT.1)CALL SETERR(' DFEAS-N.LT.1',13,1,2)
       IF (M.LT.0.OR.S.LT.0.OR.E.LT.0)CALL SETERR(
     1 ' DFEAS-M,S,OR E.LT.0',20,2,2)
       IF(E.GT.M.OR.S.GT.2*N)CALL SETERR(
     1 ' DFEAS-E.GT.M.OR.S.GT.2N',24,3,2)
       IF (IA.LT.M)CALL SETERR('DFEAS -IA.LT.M',14,4,2)
       IF (MAXITR.LT.1)CALL SETERR(
     1 ' DFEAS-MAXITR.LT.1',18,5,2)
C/
       CALL ENTER(1)
       IPGPTR=ISTKGT(M,2)
       CALL DFEASA(A,M,N,DLPMAN,IA,B,X,MAXITR,S,SIMP,ISIMP,E,
     1 DLPRNT,IAG,IAS,ISTAK(IPGPTR))
      IF (NERROR(IERR).EQ.0)GO TO 10
        CALL ERROFF
C/6S
C     IF (IERR.EQ.6) CALL SETERR(
C    133H DFEAS-NO.OF ITER. EXCEEDS MAXITR,33,6,1)
C     IF (IERR.EQ.7) CALL SETERR(
C    125H DFEAS-UNBOUNDED SOLUTION,25,7,1)
C       IF (IERR.EQ.8)CALL SETERR(
C    127HDFEAS-NO  FEASIBLE SOLUTION,27,8,1)
C      IF (IERR.EQ.9)CALL SETERR(
C    127H DFEAS-CONDITIONING PROBLEM,27,9,1)
C/7S
      IF (IERR.EQ.6) CALL SETERR(
     1' DFEAS-NO.OF ITER. EXCEEDS MAXITR',33,6,1)
      IF (IERR.EQ.7) CALL SETERR(
     1' DFEAS-UNBOUNDED SOLUTION',25,7,1)
        IF (IERR.EQ.8)CALL SETERR(
     1'DFEAS-NO  FEASIBLE SOLUTION',27,8,1)
       IF (IERR.EQ.9)CALL SETERR(
     1' DFEAS-CONDITIONING PROBLEM',27,9,1)
C/
 10   CALL LEAVE
       RETURN
       END
