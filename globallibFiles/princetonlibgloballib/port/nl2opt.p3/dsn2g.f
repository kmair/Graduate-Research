      SUBROUTINE    DSN2G(N, P, X, CALCR, CALCJ, MXFCAL, ACC )
C
C  ***  VERSION OF NL2SOL THAT CALLS  DRN2G  ***
C
C  ***  PARAMETERS  ***
C
      INTEGER N, P, LIV, LV, MXFCAL
      DOUBLE PRECISION X(P), ACC
      EXTERNAL CALCR, CALCJ
C
C  ***  PARAMETER USAGE  ***
C
C N....... TOTAL NUMBER OF RESIDUALS.
C P....... NUMBER OF PARAMETERS (COMPONENTS OF X) BEING ESTIMATED.
C X....... PARAMETER VECTOR BEING ESTIMATED (INPUT = INITIAL GUESS,
C             OUTPUT = BEST VALUE FOUND).
C CALCR... SUBROUTINE FOR COMPUTING RESIDUAL VECTOR.
C CALCJ... SUBROUTINE FOR COMPUTING JACOBIAN MATRIX = MATRIX OF FIRST
C             PARTIALS OF THE RESIDUAL VECTOR.
C MXFCAL...MAXIMUM NUMBER OF PERMITTED FUNCTION EVALUATIONS
C ACC .....DESIRED ACCURACY
C
C
C+++++++++++++++++++++++++++  DECLARATIONS  +++++++++++++++++++++++++++
C
C  ***  EXTERNAL SUBROUTINES  ***
C
      INTEGER ISTKGT
      EXTERNAL  DIVSET,  DRN2G, ISTKGT
C DDIVSET.... PROVIDES DEFAULT IV AND V INPUT COMPONENTS.
C  DRN2G... CARRIES OUT OPTIMIZATION ITERATIONS.
C
C  ***  NO INTRINSIC FUNCTIONS  ***
C
C  ***  LOCAL VARIABLES  ***
C
      INTEGER D1, DR1, IV1, JJ, N1, N2, NF, R1, RD1
      INTEGER IVV1,V1,IVD,IVJ,IVNEXT,IVNFCA,IVNFGC,IVR,IVREGD
      INTEGER IVTOOB,IVNEED,IVREG0
      INTEGER IVM1,VM1
C
C  ***  IV COMPONENTS  ***
C
      INTEGER D, J, NEXTV, NFCALL, NFGCAL, R, REGD, REGD0, TOOBIG, VNEED
      INTEGER ISTAK(1000)
      DOUBLE PRECISION DSTAK(500)
      COMMON /CSTAK/ DSTAK
      EQUIVALENCE (DSTAK(1),ISTAK(1))
C/6
C     DATA D/27/, J/70/, NEXTV/47/, NFCALL/6/, NFGCAL/7/, R/61/,
C    1     REGD/67/, REGD0/82/, TOOBIG/2/, VNEED/4/
C/7
      PARAMETER (D=27, J=70, NEXTV=47, NFCALL=6, NFGCAL=7, R=61,
     1           REGD=67, REGD0=82, TOOBIG=2, VNEED=4)
C/
C---------------------------------  BODY  ------------------------------
C
      CALL ENTER(0)
C/6S
C     IF (N.LT.1.OR.P.LT.1)
C    1CALL SETERR(24HDSN2G - N.LT.1 OR P.LT.1,24,1,2)
C     IF (MXFCAL.LT.1)
C    1CALL SETERR(19HDSN2G - MXFCAL.LT.1,19,2,2)
C     IF (ACC.LT.0.0D0)
C    1CALL SETERR(18HDSN2G -ACC .LT.0.0,18,3,2)
C/7S
      IF (N.LT.1.OR.P.LT.1)
     1CALL SETERR('DSN2G - N.LT.1 OR P.LT.1',24,1,2)
      IF (MXFCAL.LT.1)
     1CALL SETERR('DSN2G - MXFCAL.LT.1',19,2,2)
      IF (ACC.LT.0.0D0)
     1CALL SETERR('DSN2G -ACC .LT.0.0',18,3,2)
C/
       LIV=P+82
       LV=P*(N+2*P+17)+2*N+105
       IVV1=ISTKGT(LIV,2)
       IVM1=IVV1-1
       V1=ISTKGT(LV, 4)
       VM1=V1-1
       CALL DIVSET(1,ISTAK(IVV1),LIV,LV,DSTAK(V1))
      ISTAK(IVM1+21)=0
      ISTAK(IVM1+17)=MXFCAL
      ISTAK(IVM1+18)=MXFCAL
      ISTAK(IVM1+57)=0
      DSTAK(V1+32)=ACC
      DSTAK(V1+31)=ACC
      IV1 = ISTAK(IVV1)
      IF (IV1 .EQ. 14) GO TO 10
      IF (IV1 .GT. 2 .AND. IV1 .LT. 12) GO TO 10
      IF (IV1 .EQ. 12) ISTAK(IVV1) = 13
      IVNEED=IVM1+VNEED
      IF (ISTAK(IVV1) .EQ. 13)ISTAK(IVNEED) =ISTAK(IVNEED) + P + N*(P+2)
      CALL  DRN2G(X, DSTAK(V1),ISTAK(IVV1), LIV, LV, N, N, N1, N2, P,
     1DSTAK(V1),DSTAK(V1),DSTAK(V1), X)
      IF (ISTAK(IVV1) .NE. 14) GO TO 999
C
C  ***  STORAGE ALLOCATION  ***
C
      IVD=IVM1+D
      IVNEXT=IVM1+NEXTV
      ISTAK(IVD) = ISTAK(IVNEXT)
      IVR=IVM1+R
      ISTAK(IVR) = ISTAK(IVD) + P
      IVREG0=IVM1+REGD0
      ISTAK(IVREG0) = ISTAK(IVR) + N
      IVJ=IVM1+J
      ISTAK(IVJ) = ISTAK(IVREG0) + N
      ISTAK(IVNEXT) = ISTAK(IVJ) + N*P
      IVNFCA=IVM1+NFCALL
      IVNFGC=IVM1+NFGCAL
      IVREGD=IVM1+REGD
      IVTOOB=IVM1+TOOBIG
      IF (IV1 .EQ. 13) GO TO 999
C
 10   D1 = ISTAK(IVD)+VM1
      DR1 = ISTAK(IVJ)+VM1
      R1 = ISTAK(IVR)+VM1
      RD1 = ISTAK(IVREG0)+VM1
C
 20   CALL  DRN2G(DSTAK(D1), DSTAK(DR1), ISTAK(IVV1), LIV, LV, N, N,
     1 N1, N2, P, DSTAK(R1),DSTAK(RD1),DSTAK(V1),X)
      IF (ISTAK(IVV1)-2) 30, 50, 999
C
C  ***  NEW FUNCTION VALUE (R VALUE) NEEDED  ***
C
 30   NF = ISTAK(IVNFCA)
      CALL CALCR(N, P, X, NF, DSTAK(R1))
      IF (NF .GT. 0) GO TO 40
         ISTAK(IVTOOB) = 1
         GO TO 20
 40   IF (ISTAK(IVV1) .GT. 0) GO TO 20
C
C  ***  COMPUTE DR = GRADIENT OF R COMPONENTS  ***
C
 50   CALL CALCJ(N, P, X, ISTAK(IVNFGC), DSTAK(DR1))
      IF (ISTAK(IVNFGC) .EQ. 0) ISTAK(IVTOOB) = 1
      GO TO 20
C
C  ***  INDICATE WHETHER THE REGRESSION DIAGNOSTIC ARRAY WAS COMPUTED
C  ***  AND PRINT IT IF SO REQUESTED...
C
C
 999  CONTINUE
      JJ=ISTAK(IVV1)
      IF(JJ.LT.7) GO TO 80
C/6S
C     IF (JJ.EQ.7)CALL SETERR(27HDSN2G -SINGULAR CONVERGENCE,27,4,1)
C     IF(JJ.EQ.8)CALL SETERR(24HDSN2G -FALSE CONVERGENCE,24,5,1)
C     IF(JJ.EQ.9)CALL SETERR(32HDSN2G -FUNCTION EVALUATION LIMIT,32,6,1)
C     IF (JJ.EQ.63)
C    1CALL SETERR(43HDSN2G -F(X) CANNOT BE COMPUTED AT INITIAL X,43,7,1)
C     IF(JJ.EQ.65)
C    1CALL SETERR(47HDSN2G -JACOBIAN CANNOT BE COMPUTED AT INITIAL X,
C    247,8,1)
C/7S
      IF (JJ.EQ.7)CALL SETERR('DSN2G -SINGULAR CONVERGENCE',27,4,1)
      IF(JJ.EQ.8)CALL SETERR('DSN2G -FALSE CONVERGENCE',24,5,1)
      IF(JJ.EQ.9)CALL SETERR('DSN2G -FUNCTION EVALUATION LIMIT',32,6,1)
      IF (JJ.EQ.63)
     1CALL SETERR('DSN2G -F(X) CANNOT BE COMPUTED AT INITIAL X',43,7,1)
      IF(JJ.EQ.65)
     1CALL SETERR('DSN2G -JACOBIAN CANNOT BE COMPUTED AT INITIAL X',
     247,8,1)
C/
 80   CALL LEAVE
      RETURN
C
C  ***  LAST CARD OF    DSN2G FOLLOWS  ***
      END
