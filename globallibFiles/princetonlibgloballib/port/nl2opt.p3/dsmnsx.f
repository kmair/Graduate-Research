      DOUBLE PRECISION FUNCTION DSMNSX(FUNCT, P, STEP, TOL, X)
C
C *** NELDER-MEAD SIMPLEX METHOD (PATTERN SEARCH) FOR UNCONSTRAINED
C *** MINIMIZATION, EASY-TO-USE VERSION.
C
      INTEGER P
      DOUBLE PRECISION STEP, TOL, X(P)
      DOUBLE PRECISION FUNCT
      EXTERNAL FUNCT
C
C *** PARAMETERS ***
C
C FUNC (INPUT)   EXTERNAL FUNCTION TO COMPUTE F(X)
C P    (INPUT)   PROBLEM DIMENSION
C STEP (IN/OUT)  ON INPUT, THE SIZE OF THE INITIAL STEPS (FROM WHICH
C                THE INITIAL SIMPLEX IS CONSTRUCTED.  ON OUTPUT,
C                THE MAXIMUM WIDTH OF THE FINAL SIMPLEX IN ANY
C                COORDINATE DIRECTION.
C TOL  (IN/OUT)  ON INPUT, THE CONVERGENCE TOLERANCE (ON THE STANDARD
C                DEVIATION OF THE FUNCTION VALUES AT THE SIMPLEX
C                VERTICES).  ON OUTPUT, TOL IS SET TO THIS STANDARD
C                DEVIATION.
C X    (OUTPUT)  THE BEST X VALUE FOUND, CORRESPONDING TO THE RETURN
C                VALUE FROM DSMNSX
C
C
      DOUBLE PRECISION DSTAK(500)
      COMMON /CSTAK/ DSTAK
C
      INTEGER ISTKGT
      DOUBLE PRECISION DM7NSX
      EXTERNAL ISTKGT, ISTKRL, DM7NSX
C
C *** LOCAL VARIABLES ***
C
      INTEGER DX1, I, IRC, ITMX, J, P1, S1, SIJ, XE1, XR1, Y1
      DOUBLE PRECISION A, B, T, ZERO
      DATA ZERO/0.D+0/
C
C *** BODY ***
C
      IF (P .LE. 0) GO TO 40
      IF (STEP .LE. ZERO) GO TO 50
      IF (TOL .LE. ZERO) GO TO 50
      DX1 = ISTKGT(P*(P+5)+1, 4)
      XE1 = DX1 + P
      XR1 = XE1 + P
      Y1 = XR1 + P
      P1 = P + 1
      S1 = Y1 + P1
      ITMX = 1000
C
C *** INITIALIZE S ***
C
      A = -STEP / FLOAT(P1)
      B = STEP + A
      SIJ = S1
      DO 20 I = 1, P1
         DO 10 J = 1, P
            T = X(J) + A
            IF (I .EQ. J) T = X(J) + B
            DSTAK(SIJ) = T
            SIJ = SIJ + 1
 10         CONTINUE
 20      CONTINUE
C
      DSMNSX = DM7NSX(DSTAK(DX1), FUNCT, IRC, ITMX, P, P1, P, DSTAK(S1),
     1               TOL, X, DSTAK(XE1), DSTAK(XR1), DSTAK(Y1))
      GO TO (70, 30, 40, 60), IRC
C/6S
C30   CALL SETERR(43HDSMNSX -- NO CONVERGENCE IN 1000 ITERATIONS, 43,
C    1            1, 1)
C/7S
 30   CALL SETERR('DSMNSX -- NO CONVERGENCE IN 1000 ITERATIONS', 43,
     1            1, 1)
C/
      GO TO 70
C/6S
C40   CALL SETERR(39HDSMNSX -- NONPOSITIVE PROBLEM DIMENSION, 39, 2, 2)
C50   CALL SETERR(39HDSMNSX CALLED WITH STEP OR TOL .LE. 0.0, 39, 4, 2)
C60   CALL SETERR(
C    1  60HDSMNSX -- FUNCTION AT SIMPLEX CENTER EXCEEDS MAX AT VERTICES,
C    2            59, 3, 1)
C/7S
 40   CALL SETERR('DSMNSX -- NONPOSITIVE PROBLEM DIMENSION', 39, 2, 2)
 50   CALL SETERR('DSMNSX CALLED WITH STEP OR TOL .LE. 0.0', 39, 4, 2)
 60   CALL SETERR(
     1  'DSMNSX -- FUNCTION AT SIMPLEX CENTER EXCEEDS MAX AT VERTICES',
     2            59, 3, 1)
C/
C
C *** SET STEP TO THE MAX. SIMPLEX WIDTH IN ANY COORDINATE DIRECTION...
C
 70   STEP = ZERO
      DO 90 I = 1, P
         A = DSTAK(S1)
         B = A
         SIJ = S1
         S1 = S1 + 1
         DO 80 J = 2, P1
            SIJ = SIJ + P
            T = DSTAK(SIJ)
            IF (A .GT. T) A = T
            IF (B .LT. T) B = T
 80         CONTINUE
         STEP = DMAX1(STEP, B-A)
 90      CONTINUE
C
      CALL ISTKRL(1)
 999  RETURN
C *** LAST LINE OF DSMNSX FOLLOWS ***
      END
