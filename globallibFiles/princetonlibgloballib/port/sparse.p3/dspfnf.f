      SUBROUTINE DSPFNF(N,MRP,MCP, AROW, IWORK,A , GROWTH, EPS)
      INTEGER N, IWORK(1), JLU
       INTEGER MRP(N), MCP(N)
      INTEGER ROW, ROWM1
      DOUBLE PRECISION  GROWTH, EPS, A(1)
      EXTERNAL AROW
      INTEGER IST(1000)
      DOUBLE PRECISION DD(500)
      COMMON /CSTAK/ DD
       EQUIVALENCE (DD(1),IST(1))
C NUMERICAL FACTORIZATION
C INPUT PARAMETERS
C N    ORDER OF MATRIX
C MRP   INTEGER VECTOR OF LENGTH N GIVING ROW PERMUTATIONS
C MCP   INTEGER VECTOR OF LENGTH N GIVING COLUMN PERMUTATIONS
C IWORK INTEGER VECTOR OF SYMBOLIC FACTORIZATION COMPUTED BY
C        SPFSF
C EPS     LARGEST NONACCEPTABLE PIVOT FOR SINGULARITY TEST
C AROW    SUBROUTINE,DECLARED EXTERNAL IN THE USERS MAIN PROGRAM
C         WHICH HAS THE CALLING SEQUENCE AROW(I,ROW,ROW,NUM)
C         WITH INPUT PARAMETER I AND OUTPUT PARAMETERS ROW, ROW
C         AND NUM WHICH RETURNS IN THE D.P. VECTOR ROW THE
C         NONZERO ENTRIES IN THE ITH ROW OF A. THE VECTOR
C         ROW SHOULD BE FILLED WITH THE CORRESPONDING COLUMN
C         INDICES OF THE NONZERO ELEMENTS. NUM GIVES THE NUMBER
C         OF THE ELEMENTS
C OUTPUT PARAMETERS
C A     NUMERICAL FACTORIZATION OF MATRIX
C G    GROWTH FACTOR
C STORAGE ALCATED -2N DOUBLE PRECISION AND N INTEGER LOCATIONS
C       ARE RETURNED
C ERROR STATES
C 1   N.LT.1     FATAL
C 10+K SINGULAR MATRIX OF RANK K   RECOVERABLE
C/6S
C     IF (N .LT. 1) CALL SETERR(13HDSPFNF-N.LT.1, 13, 1, 2)
C/7S
      IF (N .LT. 1) CALL SETERR('DSPFNF-N.LT.1', 13, 1, 2)
C/
      CALL ENTER(1)
      ID = ISTKGT(2*N, 4)
      ROW= ISTKGT(N,2)
      ROWM1=ROW-1
      IROW=ID+N
        DO 10 I=1,N
           K=MCP(I)
           INDEX=ROWM1+K
           IST(INDEX)=I
 10     CONTINUE
       JLU=2*N+2
       CALL DS4FNF(N,MRP,IST(ROW),IWORK,IWORK(N+2),IWORK(JLU),A,
     1   AROW,DD(IROW),GROWTH,EPS,MCP)
C/6S
C     IF (NERROR(NERR) .NE. 0) CALL N5ERR(22HDSPFNF-SINGULAR MATRIX, 22,
C    1   NERR, 1)
C/7S
      IF (NERROR(NERR) .NE. 0) CALL N5ERR('DSPFNF-SINGULAR MATRIX', 22,
     1   NERR, 1)
C/
         DO 20 I=1,N
             IDEX=ROWM1+I
             INDEX=IST(IDEX)
             MCP(INDEX)=I
 20      CONTINUE
      CALL LEAVE
      RETURN
      END
