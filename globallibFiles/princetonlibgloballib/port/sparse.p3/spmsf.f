      SUBROUTINE SPMSF(N,MRP, INMCP, IA, JA, IWORK, IWMAX, IFILL)
      INTEGER N
      INTEGER MRP(N), INMCP(N), IA(1), JA(1), IWORK(IWMAX)
      INTEGER IFILL
      DOUBLE PRECISION DD(500)
      COMMON /CSTAK/ DD
      INTEGER IM, ISTKGT
      INTEGER I, K, Q
      INTEGER ISP(1000)
      LOGICAL TEMP1
      EQUIVALENCE (DD(1), ISP(1))
C       SYMBOLIC FACTORIZATION OF A MATRIX
C INPUT PARAMTERS
C N     ORDER OF SYSTEM
C MRP   INTEGER VECTOR LENGTH N, ROW ORDER
C INMCP  INTEGER VECTOR LENGTH N,INVERSE COLUMN ORDER
C IA    INTEGER VECTOR, LENGTH N+1, POINTS TO BEGINNING
C        OF EACH ROW IN JA
C JA    INTEGER VECTOR-COLUMN INDICES OF ARRAY
C IWMAX LENGTH OF WORK STACK, SHOULD BE AT LEAST 2N+2+IA(N+1)
C       PREFERABLY TWICE THAT SIZE
C OUTPUT PARAMETERS
C IWORK     INTEGER VECTOR  WHICH HAS THE INFORMATION OF THE
C           SYMBOLIC FACTORIZATION. FIRST N+1 QUANTITIES INDICATE
C           THE BEGINNING OF EACH L ROW IN SYMBOLIC FACT. NEXT
C           N+1 GIVE BEGINNING OF EACH L ROW, AFTER THAT COMES
C           THE COLUMN INDICES OF THE FACTORIZATION
C IFILL     AMOUNT OF STORAGE NEEDED TO STORE FULL LU FACTOR-
C           IZATION OF A MATRIX
C ERROR STATES
C 1    N.LT.1     FATAL
C 2    MRP NOT IN 1 THROUGH N     FATAL
C 3     MCP NOT IN 1 THROUGH N  FATAL
C 4 IWMAX LESS TAN 2N+1+IA(N+1)
C 10+K  KTH ROW IN A IS NULL     FATAL
C 10+N+K DUPLICATE ENTRY IN ROW K   FATAL
C 10+2N+K STORAGE EXCEEDED WHILE PROCESSING ROW K    RECOVERABLE
C 10+3N+K NULL PIVOT AT ROW K FATAL
C STORAGE TAKEN FROM PORT STACK-2N+1 INTEGER LOCATIONS
C/6S
C     IF (N .LT. 1) CALL SETERR(13H SPMSF-N.LT.1, 13, 1, 2)
C/7S
      IF (N .LT. 1) CALL SETERR(' SPMSF-N.LT.1', 13, 1, 2)
C/
      CALL ENTER(1)
      Q=ISTKGT(2*N+1,2)
      IM=Q+N+1
      DO  1 I = 1, N
         TEMP1 = MRP(I) .LT. 1
         IF (.NOT. TEMP1) TEMP1 = MRP(I) .GT. N
C/6S
C        IF (TEMP1) CALL SETERR(23H SPMSF-MRP OUT OF RANGE,23,2,2)
C/7S
         IF (TEMP1) CALL SETERR(' SPMSF-MRP OUT OF RANGE',23,2,2)
C/
         K = INMCP(I)
         TEMP1 = K .LT. 1
         IF (.NOT. TEMP1) TEMP1 = K .GT. N
C/6S
C        IF (TEMP1) CALL SETERR(23H SPMSF-MCP OUT OF RANGE,23,3,2)
C/7S
         IF (TEMP1) CALL SETERR(' SPMSF-MCP OUT OF RANGE',23,3,2)
C/
   1     CONTINUE
C/6S
C     IF (IWMAX.LT.2*N+1+IA(N+1)) CALL SETERR(
C    122H SPMSF-IWMAX TOO SMALL,22,4,2)
C/7S
      IF (IWMAX.LT.2*N+1+IA(N+1)) CALL SETERR(
     1' SPMSF-IWMAX TOO SMALL',22,4,2)
C/
      JLU=2*N+2
       IAMAX=IWMAX-2*N-2
      CALL S4MSF(N,MRP,INMCP,IA,JA,IWORK,IWORK(N+2),IWORK(JLU),IAMAX,
     1 ISP(Q),ISP(IM),IERR)
C/6S
C     IF (IERR.GT.10+3*N) CALL SETERR(17H SPMSF-NULL PIVOT,
C    1   17,IERR,2)
C/7S
      IF (IERR.GT.10+3*N) CALL SETERR(' SPMSF-NULL PIVOT',
     1   17,IERR,2)
C/
      IF (IERR.LT.10+2*N) GO TO 3
C/6S
C       CALL SETERR(23H SPMSF-STORAGE EXCEEDED,23,IERR,1)
C/7S
        CALL SETERR(' SPMSF-STORAGE EXCEEDED',23,IERR,1)
C/
        CALL LEAVE
        RETURN
C/6S
C3    IF(IERR.GT.10+N)CALL SETERR(
C    1  34H SPMSF-INVALID COLUMN INDEX IN ROW,34,IERR,2)
C      IF (IERR.GT.0) CALL SETERR(20H SPMSF-NULL ROW IN A,
C    1   20,IERR,2)
C/7S
 3    IF(IERR.GT.10+N)CALL SETERR(
     1  ' SPMSF-INVALID COLUMN INDEX IN ROW',34,IERR,2)
       IF (IERR.GT.0) CALL SETERR(' SPMSF-NULL ROW IN A',
     1   20,IERR,2)
C/
           IFILL=IWORK(N+1)-1
          CALL LEAVE
   4  RETURN
      END
