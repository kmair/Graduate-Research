      SUBROUTINE DSPMCE(N, R, C, A, IA, JA, IAMAX, IL, ISIZE, COND,
     1   Z)
      INTEGER N
      INTEGER R(N), C(N), IA(1), JA(1), IAMAX, IL(N)
      INTEGER ISIZE
      DOUBLE PRECISION A(1), COND, Z(N)
      DOUBLE PRECISION D(500)
      COMMON /CSTAK/ D
      INTEGER ICI, ISTKGT, I, J, JMIN, JMAX
      INTEGER IERR, ITMP, IC, II(1000), IC1
      DOUBLE PRECISION SUM, GROWTH, SUM1, RSTK(500)
      LOGICAL TEMP
      EQUIVALENCE (D(1), II(1))
      EQUIVALENCE (D(1), RSTK(1))
C
C SPARSE CONDITION ESTIMATOR
C
C INPUT PARAMETERS
C
C N         NUMBER OF EQUATIONS
C R         INTEGER VECTOR GIVING ROW PERMUTATIONS
C IA        INTEGER VECTOR OF LENGTH N+1 POINTING TO BEGINING OF
C           EACH ROW IN THE A ARRAY
C JA        INTEGER VECTOR GIVING COLUMN INDEX OF EACH ELEMENT
C           IN THE A ARRAY
C A         DOUBLE PRECISION ARRAY INTO WHICH THE NONZERO ELEMENTS
C           OF A ARE PACKED BY ROWS
C IAMAX     TOTAL SIZE OF THE A ARRAY,MUST BE LARGE ENOUGH TO
C           HOLD LU DECOMPOSITION OF A
C OUTPUT PARAMETERS
C C         REORDERED COLUMNS
C JA        COLUMN INDICES OF LU DECOMPOSITION OF A
C A         LU DECOMPOSITION OF A
C IU        INTEGER VECTOR OF LENGTH N+1 STATING WHERE EACH ROW
C           OF U BEGINS IN THE A AND JA ARRAYS
C COND      ESTIMATE OF THE CONDITION NUMBER OF A
C Z         DOUBLE PRECISION VECTOR LENGTH N, GIVING APPROXIMATE NULL
C           VECTOR
C SPACE ALLOCATED 2N+1 INTEGER LOCATIONS  AND N DOUBLE PRECISION LOCATIO
C/6S
C     IF (N .LT. 1) CALL SETERR(12HDSPCE-N.LT.1, 12, 1, 2)
C     IF (IAMAX .LT. IA(N+1)-1) CALL SETERR(24HDSPCE-INSUFFICIENT SPACE,
C    1   24, 3, 2)
C/7S
      IF (N .LT. 1) CALL SETERR('DSPCE-N.LT.1', 12, 1, 2)
      IF (IAMAX .LT. IA(N+1)-1) CALL SETERR('DSPCE-INSUFFICIENT SPACE',
     1   24, 3, 2)
C/
      CALL ENTER(1)
      IC = ISTKGT(2*N+1, 2)
      SUM1 = 0.D0
      ITMP = IC+N
      IC1 = IC-1
C FIND NORM OF MATRIX AND CHECK ROW PERMUTATIONS
C SET COLUMN PERMUTATION TO INITIALLY NO COLUMN INTERCHANGES.
      DO  2 I = 1, N
         SUM = 0.D0
         TEMP = R(I) .LT. 1
         IF (.NOT. TEMP) TEMP = R(I) .GT. N
C/6S
C        IF (TEMP) CALL SETERR(21HDSPCE-R  OUT OF RANGE, 21, 2, 2)
C/7S
         IF (TEMP) CALL SETERR('DSPCE-R  OUT OF RANGE', 21, 2, 2)
C/
         ICI = IC1+I
         C(I) = I
         II(ICI) = I
         JMIN = IA(I)
         JMAX = IA(I+1)-1
         DO  1 J = JMIN, JMAX
            SUM = SUM+DABS(A(J))
   1        CONTINUE
         IF (SUM .GT. SUM1) SUM1 = SUM
   2     CONTINUE
      CALL DS4MLU(N,IA, JA, A, IAMAX, IL, II(ITMP), Z, II(IC), R, C,
     1   IERR, 1.D0, 0.D0, ISIZE, GROWTH)
      IF (IERR .EQ. 0) GOTO 6
         IF (IERR .GT. N+10) GOTO 3
C/6S
C           CALL SETERR(15HDSPMCE-NULL ROW, 15, IERR, 2)
C/7S
            CALL SETERR('DSPMCE-NULL ROW', 15, IERR, 2)
C/
            GOTO  7
C/6S
C  3        IF (IERR .LE. 2*N+10) CALL SETERR(
C    1         29HDSPMCE-INCORRECT COLUMN INDEX, 29, IERR, 2)
C/7S
   3        IF (IERR .LE. 2*N+10) CALL SETERR(
     1         'DSPMCE-INCORRECT COLUMN INDEX', 29, IERR, 2)
C/
            IF (IERR .LE. 3*N+10) GOTO 4
C/6S
C              CALL SETERR(25HDSPMCE-INSUFFICIENT SPACE, 25, IERR, 1)
C/7S
               CALL SETERR('DSPMCE-INSUFFICIENT SPACE', 25, IERR, 1)
C/
               GOTO  7
   4        CONTINUE
   6  CALL ISTKRL(1)
      ITMP = ISTKGT(N, 4)
      CALL DS4MCE(N, R, C, A, IA, JA, IL, SUM1, COND, Z, RSTK(ITMP))
C/6S
C     IF (IERR .NE. 0) CALL SETERR(22HDSPMCE-SINGULAR MATRIX, 22, IERR
C    1   , 1)
C/7S
      IF (IERR .NE. 0) CALL SETERR('DSPMCE-SINGULAR MATRIX', 22, IERR
     1   , 1)
C/
   7  CALL LEAVE
      RETURN
      END
