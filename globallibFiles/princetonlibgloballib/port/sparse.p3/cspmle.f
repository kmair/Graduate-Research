      SUBROUTINE CSPMLE(N, ORDER, IA, JA, A, ISIZE, B, IB, NB)
C  THIS IS LINDA KAUFMANS SPARSE MATRIX PACKAGE
C  COMPLEX VERSION
C
C  DECEMBER 9, 1982 (REVISION)
C
      INTEGER N, IB, NB
      INTEGER IA(N), JA(N), ISIZE
      EXTERNAL I4YX
      COMPLEX A(N), B(IB, NB)
      LOGICAL ORDER
      DOUBLE PRECISION DSTAK(500)
      COMMON /CSTAK/ DSTAK
      INTEGER MCP, MAX, JLU, MRP, ISTKGT, ISTKQU
      INTEGER I, L, IEND, ILIN, IERR, ISUB
      INTEGER LAST, TEMP, IC, IHEAD, MC, II(1000)
      INTEGER IV, IU, LU, MR, IZ, ILEFT
      INTEGER IC1
      REAL BEF, CABS1, EPS,  AMAX1, R1MACH
      COMPLEX D(500)
      LOGICAL TEMP1
      EQUIVALENCE (D(1), II(1), DSTAK(1))
C THIS SUBROUTINE SOLVES AX = B WHERE A IS A SPARSE MATRIX
C INPUT PARAMETERS
C N      NUMBER OF EQUATIONS
C ORDER   LOGICAL VARIABLE. IF .TRUE. REORDERING FOR
C         STABILITY WILL BE PERFORMED
C IA      INTEGER VECTOR, LENGTH N+1, POINTING TO BEGINNINGS
C         OF ROWS IN JA AND A VECTORS
C JA      COLUMN INDICES OF NONZERO ELEMENTS OF MATRIX
C A       NONZERO ELEMENTS OF THE MATRIX
C B      RIGHT HAND SIDE MATRIX,DESTROYED ON OUTPUT
C IB     ROW DIMENSION OF B
C NB     NUMBER OF COLUMNSOF B
C OUTPUT PARAMETERS
C B      THE SOLUTION TO AX=B
C ISIZE ACTUAL  UMBER OF ELEMENTS IN THE PORT STACK NEEDED TO
C       SAVE THE DECOMPOSITION
C SPACE ALLOCATED AND DEALLOCATED-3N+2 INTEGER AND N
C COMPLEX LOCATIONS PLUS ISIZE INTEGER AND
C COMPLEX LOCATIONS NEED TO HOLD THE U FROM THE
C LU DECOMPOSITION OF A
C ERROR STATES
C 1 N.LT.1        FATAL
C 2 IB .LT. N
C 3 NB .LT. 1
C 10+K     NULL ROW           FATAL
C N+K+10   INCORRECT COLUMN INDEX AT ROW K     FATAL
C 3N+K+10   SINGULAR MATRIX OF RANK K      RECOVERABLE
C 2N+K+10  RAN OUT OF SPACE WHEN PROCEESING ROW K
C/6S
C     IF (N .LT. 1) CALL SETERR(13HCSPMLE-N.LT.1, 13, 1, 2)
C     IF (IB .LT. N) CALL SETERR(14HCSPMLE-IB.LT.N, 14, 2, 2)
C     IF (NB .LT. 1) CALL SETERR(14HCSPMLE-NB.LT.1, 14, 3, 2)
C/7S
      IF (N .LT. 1) CALL SETERR('CSPMLE-N.LT.1', 13, 1, 2)
      IF (IB .LT. N) CALL SETERR('CSPMLE-IB.LT.N', 14, 2, 2)
      IF (NB .LT. 1) CALL SETERR('CSPMLE-NB.LT.1', 14, 3, 2)
C/
      CALL ENTER(1)
C GET SPACE FROM THE STACK FOR COLUMN ORDERING AND THE INVERSE
C COLUMN ORDERING AND A COMPLEX VECTOR OF LENGTH N USED IN CS4MLE
      IZ = ISTKGT(N, 5)
      IC = ISTKGT(2*N, 2)
      MCP = IC+N
      IC1 = IC-1
      MC = MCP-1
      ILEFT = ISTKQU(2)-10
C ISUB CONSTAINS THE NUMBER OF LOCATIONS NEEDED TO STORE THE ROW
C PERMUTATION VECTOR, THE POINTER TO U AND AND AN INTEGER TEMPORARY
C VECTOR
      ISUB = 3*N+3
C FIND THE NORM OF THE MATRIX
      IEND = IA(N+1)-1
      BEF = 0.0
      DO  1 I = 1, IEND
         BEF = AMAX1(BEF, CABS1(A(I)))
   1     CONTINUE
      EPS = R1MACH(4)*BEF
      IF (ORDER) GOTO 3
         ISUB = ISUB-N
C WHEN THERE IS NO PERMUTATION MATRIX NO STORAGE IS NECESSARY
C FOR THE ROW PERMUTATION VECTOR
C SET UP COLUMN PERMUTATION ARRAYS TO INDICATE NO PERMUTATION
         DO  2 I = 1, N
            IC1 = IC1+1
            II(IC1) = I
            MC = MC+1
            II(MC) = I
   2        CONTINUE
         GOTO  5
   3     JLU = ISTKGT(ILEFT, 2)
C ALLOCATE ALL THE REMAINING SPACE
         MAX = (ILEFT-N)/2
         IV = JLU
         L = IV+MAX
         IHEAD = L+MAX
         IERR = 2*N+11
         IF (MAX .LT. N) GOTO  12
         IERR = 0
         CALL S4MDM(N, I4YX, MAX, II(IV), II(L), II(IHEAD), II(MCP),
     1      II(IC), II(IV), IERR,IA,JA,1)
         IF (IERR .EQ. 0) GOTO 4
            IF (IERR .GT. 2*N+10) GOTO  12
            IF (IERR .LE. N+10) GOTO  11
            TEMP1 = IERR .GT. N+10
            IF (TEMP1) TEMP1 = IERR .LE. 2*N+10
C/6S
C           IF (TEMP1) CALL SETERR(29HCSPMLE-INCORRECT COLUMN INDEX, 29,
C    1         IERR,2)
C/7S
            IF (TEMP1) CALL SETERR('CSPMLE-INCORRECT COLUMN INDEX', 29,
     1         IERR,2)
C/
   4     CALL ISTKRL(1)
C ILEFT IS THE NUMBER OF LOCATIONS LEFT IN THE STACK TO STORE U
   5  ILEFT = ILEFT-ISUB
C ALLOCATE THE SPACE BETWEEN INTEGER AND COMPLEX LOCATIONS DEPENDENT
C ON THE SPACE REQUIRED FOR EACH
      ILIN = (ILEFT*II(7))/(II(7)+II(10))
      JLU = ISTKGT(ILIN, 2)
      LU = ISTKGT(ILIN, 5)
      MRP = 1
      IU = ISTKGT(ISUB, 2)
      TEMP = IU+N+2
      IF (.NOT. ORDER) GOTO 7
         MC = MCP-1
C PUT THE ROW PERMUTATION  VECTOR EQUAL TO THE COLUMN
C PERMUTATION VECTOR
         MR = TEMP+N
         MRP = MR+1
         DO  6 I = 1, N
            MC = MC+1
            MR = MR+1
            II(MR) = II(MC)
   6        CONTINUE
   7  CALL CS4MLE(N,B, IB, NB, II(JLU), D(LU), ILIN, II(IU), II(TEMP), D
     1   (IZ), II(IC), II(MRP), II(MCP), IERR, 0.1E0, LAST, IA, JA, A,
     1   ORDER, EPS)
      IF (IERR .NE. 0) GOTO 8
         ISIZE = LAST-1
         CALL CS4MBS(N,II(IU), II(JLU), D(LU), II(MCP), B, IB, NB, D(IZ)
     1      )
         GOTO  13
   8     IF (IERR .LE. N+10) GOTO 11
            IF (IERR .LE. 3*N+10) GOTO  12
C/6S
C           CALL SETERR(22HCSPMLE-SINGULAR MATRIX, 22, IERR, 1)
C/7S
            CALL SETERR('CSPMLE-SINGULAR MATRIX', 22, IERR, 1)
C/
            GOTO  13
C/6S
C 11  CALL SETERR(15HCSPMLE-NULL ROW, 15, IERR, 1)
C/7S
  11  CALL SETERR('CSPMLE-NULL ROW', 15, IERR, 1)
C/
      GOTO  13
C/6S
C 12  CALL SETERR(25HCSPMLE-INSUFFICIENT SPACE, 25, IERR, 1)
C/7S
  12  CALL SETERR('CSPMLE-INSUFFICIENT SPACE', 25, IERR, 1)
C/
  13  CALL LEAVE
      RETURN
      END
