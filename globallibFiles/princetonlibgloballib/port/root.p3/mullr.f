      COMPLEX FUNCTION MULLR (F, Z1, Z2, Z3, EPSZ, EPSF, MAXITR, ITER)
C
C  THIS SUBROUTINE IS A MODULE WHICH USES MULLERS METHOD
C  TO ITERATE TOWARD A ZERO OF THE REAL FUNCTION COMPUTED
C  BY THE USER-WRITTEN FUNCTION, F.
C
C  WRITTEN AUGUST 1979 BY PHYLLIS FOX.
C
C  THE THREE STARTING POINTS ARE Z1 AND Z2 AND Z3.
C  THESE MUST BE THREE DIFFERENT VALUES.
C
C  IF THE USER ALREADY KNOWS SOME ZEROS OF F, SAY ZA AND ZB,
C  IT MIGHT BE BEST FOR THE FUNCTION ROUTINE TO COMPUTE
C  THE DEFLATED VALUE,
C
C        G(Z) = F(Z)/((Z-ZA)(Z-ZB))
C
C  (CARE MUST BE TAKEN HERE TO BE SURE THAT Z IS NOT NEAR
C  TO ZA OR TO ZB.)
C
C  INPUT PARAMETERS -
C
C  F        - A COMPLEX FUNCTION SUBPROGRAM WRITTEN BY THE USER,
C             WHICH, GIVEN A COMPLEX VALUE, ZNOW, RETURNS
C             THE VALUE OF THE FUNCTION, F(ZNOW).
C             NOTE THAT COMPLEX ARITHMETIC MUST BE USED EVEN IF
C             THE FUNCTION IS REAL FOR REAL VALUES OF ITS ARGUMENT.
C             SEE ALSO THE REMARK ABOVE ON EVALUATING THE FUNCTION.
C
C             THE FUNCTION NAME SHOULD BE DECLARED EXTERNAL AND
C             COMPLEX IN THE CALLING PROGRAM.
C
C  Z1,Z2,Z3 - THREE GUESSES (COMPLEX-VALUED) AT THE LOCATION IN THE
C             COMPLEX PLANE OF THE DESIRED ZERO.
C
C  EPSZ    -  THE PROCESS IS ASSUMED TO CONVERGE WHEN
C             THE TWO MOST RECENT ITERATES, ZNOW AND ZLAST,
C             ARE SUCH THAT ABS(ZNOW-ZLAST) IS LESS THAN EPSZ
C             AND IT IS ALSO TRUE THAT THE VALUE OF THE
C             FUNCTION, F(ZNOW) IS LESS (IN ABSOLUTE VALUE)
C             THAN EPSF.
C             BOTH CRITERIA MUST HOLD.
C
C  EPSF    -  CONVERGENCE CRITERION ON F - SEE EPSZ ABOVE.
C
C  MAXITR  -  THE MAXIMUM NUMBER OF ITERATIONS -
C             THE PROCESS FAILS (RECOVERABLE ERROR)
C             IF THE ABOVE ERROR CRITERIA ARE NOT MET WITHIN
C             MAXITR NUMBER OF ITERATIONS.
C
C
C  OUTPUT PARAMETERS -
C
C  ITER    -  ACTUAL NUMBER OF ITERATIONS USED
C
C  SCRATCH SPACE ALLOCATED - NONE.
C
C  ERROR STATES -
C
C  1 - MAXITR .LT. 1
C
C  2 - EPSZ OR EPSF .LT. 0.
C
C  3 - THE NUMBER OF ITERATIONS EXCEEDED MAXITR
C      WITHOUT CONVERGENCE TO A ZERO.  (RECOVERABLE ERROR)
C
C  4 - DIVERGENCE -
C        EITHER THE COMPUTED CORRECTION TO Z EXCEEDS
C        100 TIMES THE PREVIOUS CORRECTION, OR
C        ONE OF THE DIVIDED DIFFERENCES WOULD OVERFLOW.
C        THIS ERROR WILL ALSO OCCUR IF TWO INPUT ZS ARE
C        THE SAME.
C        (RECOVERABLE ERROR)
C
C  5 - THE PROCESS IS STUCK - THE COMPUTED CORRECTION TO Z IS LESS
C      THAN 10 ROUNDING ERRORS TIMES CABS(ZNEW), BUT CABS(F(ZNEW))
C      IS NOT LESS THAN EPSF.  (RECOVERABLE ERROR)
C
      INTEGER ITER, MAXITR
      REAL EPSF, EPSZ, SQRTMX, R1MACH, RNDERR
C
      COMPLEX B, CSTEP, DENOM, F, F1, F2, F3, F21, F32, F321,
     1  FNEW, RADICL, USEZ21, USEZ32, Z1, Z2, Z3, Z32, ZNEW
      EXTERNAL F
      COMPLEX CSQRT
C
C  CHECK THE INPUT PARAMETERS.
C
C/6S
C     IF (MAXITR .LT. 1) CALL
C    1  SETERR(23H  MULLR - MAXITR .LT. 1, 23, 1, 2)
C/7S
      IF (MAXITR .LT. 1) CALL
     1  SETERR('  MULLR - MAXITR .LT. 1', 23, 1, 2)
C/
C
C/6S
C     IF (EPSZ .LT. 0. .OR. EPSF .LT. 0.) CALL
C    1  SETERR(32H  MULLR - EPSZ OR EPSF .LT. ZERO, 32, 2, 2)
C/7S
      IF (EPSZ .LT. 0. .OR. EPSF .LT. 0.) CALL
     1  SETERR('  MULLR - EPSZ OR EPSF .LT. ZERO', 32, 2, 2)
C/
C
C
C  SET UP THE INITIAL VALUES.
C
      ITER = 0
C
      RNDERR = R1MACH(4)
      SQRTMX = SQRT(R1MACH(2))
C
      MULLR = Z3
      F1 = F(Z1)
      F2 = F(Z2)
      F3 = F(Z3)
C
C  CHECK FOR POSSIBLE OVERFLOW.
C
       USEZ21 = Z2 - Z1
      IF (CABS(F2-F1) .LT. CABS(USEZ21)*SQRTMX) GO TO 10
       USEZ21 = 10.0E0 * USEZ21
      IF (CABS(F2-F1) .LT. CABS(USEZ21)*SQRTMX) GO TO 10
      GO TO 40
C
 10   F21 = (F2 - F1)/USEZ21
C
C
C  SET UP THE QUADRATIC AND FIND ITS ROOTS.
C
C  CHECK FOR POSSIBLE OVERFLOW.
C
 20    Z32 = Z3 - Z2
        USEZ32 = Z32
      IF (CABS(F3-F2) .LT. CABS(USEZ32)*SQRTMX) GO TO 30
       USEZ32 = 10.0E0 * USEZ32
      IF (CABS(F3-F2) .LT. CABS(USEZ32)*SQRTMX) GO TO 30
      GO TO 40
C
 30   F32 = (F3 - F2)/USEZ32
C
C  IF F321 IS GOING TO OVERFLOW, JUST BLATANTLY SET
C  IT TO ZERO.
C  (IT IS IN THE NATURE OF A CORRECTION TERM ANYHOW.)
C
      F321 = CMPLX(0.0E0,0.E0)
C
      IF (CABS(F32-F21) .LT. CABS(Z3-Z1)*SQRTMX)
     1    F321 = (F32 - F21)/(Z3-Z1)
C
      B = F32 + Z32*F321
      RADICL = B*B - 4.E0*F321*F3
      RADICL = CSQRT(RADICL)
C
C  TAKE THE DENOMINATOR OF LARGER MAGNITUDE.
C
      IF (REAL(B)*REAL(RADICL) + AIMAG(B)*AIMAG(RADICL)
     1   .LT. 0.0) RADICL = -RADICL
      DENOM = B + RADICL
C
C  CHECK THAT THE NEW CORRECTION, CSTEP=2F3/DENOM,
C  IS LESS THAN 100 TIMES THE PREVIOUS, Z32.
C  OTHERWISE SIGNAL ERROR
C  (EXCEPT SKIP THIS TEST AT THE FIRST ITERATION.)
      IF (ITER .EQ. 0) GO TO 50
C
      IF (CABS(DENOM) .GT. CABS(F3)/(50.E0*CABS(Z32))) GO TO 50
C
C  GETS HERE IF PROCESS SEEMS TO BE DIVERGING -
C  SEE ERROR 4 IN ERROR STATES ABOVE.
C
C/6S
C40   CALL SETERR (32H  MULLR - PROCESS NOT CONVERGING, 32, 4,1)
C/7S
 40   CALL SETERR ('  MULLR - PROCESS NOT CONVERGING', 32, 4,1)
C/
      RETURN
C
C  FIND THE CORRECTION, CSTEP TO Z3.
C
 50   CSTEP = 2.E0 * F3/DENOM
      ZNEW = Z3 - CSTEP
 60   MULLR = ZNEW
      FNEW = F(ZNEW)
C
C  COUNT ITERATIONS
C
      ITER = ITER + 1
C
C  TEST FOR NUMBER OF ITERATIONS, CONVERGENCE, OR DIVERGENCE.
C
      IF (ITER .LT. MAXITR) GO TO 70
C/6S
C     CALL SETERR (46H  MULLR - NUMBER OF ITERATIONS EXCEEDED MAXITR,
C    1  46, 3, 1)
C/7S
      CALL SETERR ('  MULLR - NUMBER OF ITERATIONS EXCEEDED MAXITR',
     1  46, 3, 1)
C/
      RETURN
 70   IF (CABS(FNEW) .LE. 100.E0*CABS(F3)) GO TO 80
C
C  SEEMS TO BE DIVERGING HERE - HALVE THE STEP
C
      CSTEP = .5E0*CSTEP
      ZNEW = ZNEW + CSTEP
      GO TO 60
C
C  HERE ALL LOOKS HOPEFUL.
C
 80   IF (CABS(FNEW) .LT. EPSF .AND. CABS(ZNEW-Z3) .LT. EPSZ) RETURN
      IF (CABS(CSTEP) .GT. 10.0E0*RNDERR*CABS(Z3)) GO TO 90
C/6S
C     CALL SETERR(41H  MULLR - THE TRIAL FOR THE ZERO IS STUCK,41,5,1)
C/7S
      CALL SETERR('  MULLR - THE TRIAL FOR THE ZERO IS STUCK',41,5,1)
C/
      RETURN
 90   Z1 = Z2
      Z2 = Z3
      Z3 = ZNEW
      F1 = F2
      F2 = F3
      F3 = FNEW
      F21 = F32
      GO TO 20
C
      END
