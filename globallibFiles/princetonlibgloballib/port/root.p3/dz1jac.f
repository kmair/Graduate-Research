      SUBROUTINE DZ1JAC(FUNC, N, X, F, DFDX, JUSED)
      INTEGER N
      EXTERNAL FUNC
      INTEGER JUSED
      DOUBLE PRECISION X(N), F(N), DFDX(N, N)
      COMMON /DZ1COM/ P2, G2, XP, XG, RATSAV, XGMAX, X2, DX2OLD, DXTRY
     1   , RELERR, F2PREV, F2BEST, F2LAST, F2NORM, F2DMAX, SMALL, SING
     2   , GFLAG, VFLAG, JMAX, JCALL, ISLOW, JPRINT, NUMUPD, N2BIG
      INTEGER JMAX, JCALL, ISLOW, JPRINT, NUMUPD, N2BIG
      LOGICAL SMALL, SING, GFLAG, VFLAG
      DOUBLE PRECISION P2, G2, XP, XG, RATSAV, XGMAX
      DOUBLE PRECISION X2, DX2OLD, DXTRY, RELERR, F2PREV, F2BEST
      DOUBLE PRECISION F2LAST, F2NORM, F2DMAX
      INTEGER K, NERROR, NERR, J
      DOUBLE PRECISION D1MACH, RSMALL, RELACC, RLARGE, XSAVE, DXSM
      DOUBLE PRECISION DXBIG, DX, DF2NRM, DNRM2
C NUMERICAL APPROXIMATION TO JACOBIAN OF FUNC AT X
C INPUTS
C N = NUMBER OF COMPONENTS
C N-VECTORS X, AND F = VALUE OF FUNC AT X
C OUTPUTS
C JACOBIAN MATRIX DFDX
C JUSED = NUMBER OF CALLS TO FUNC USED
      RSMALL = D1MACH(1)
      RLARGE = D1MACH(2)
      RELACC = 100.0D0*D1MACH(4)
      JUSED = 0
      DO  11 K = 1, N
         DXSM = DMAX1(RSMALL, RELACC*DABS(X(K)))
         DXBIG = RLARGE
         XSAVE = X(K)
         DX = DMAX1(DXTRY, DXSM)
   1        IF (JCALL+JUSED+N-K .LT. JMAX) GOTO 2
C/6S
C              CALL SETERR(15HDZ1JAC - FAILED, 15, 1, 1)
C/7S
               CALL SETERR('DZ1JAC - FAILED', 15, 1, 1)
C/
               RETURN
   2        X(K) = XSAVE+DX
            JUSED = JUSED+1
            CALL FUNC(N, X, DFDX(1, K))
            IF (NERROR(NERR) .EQ. 0) GOTO 3
               CALL ERROFF
               DF2NRM = 2.0D0*F2NORM
               GOTO  5
   3           DO  4 J = 1, N
                  DFDX(J, K) = DFDX(J, K)-F(J)
   4              CONTINUE
               DF2NRM = DNRM2(N, DFDX(1, K), 1)
C     IF (DF2NRM.LT.RELACC*F2NORM)      DX TOO SMALL
C        DXSM=DMAX1(DX,DXSM), DX=10.0D0*DX
C     ELSE
   5        IF (DF2NRM .LE. F2NORM) GOTO 6
               DXBIG = DMIN1(DX, DXBIG)
C DX TOO LARGE
               DX = DX*DMIN1(0.5D0, DMAX1(0.01D0, 0.5D0*F2NORM/DF2NRM))
               GOTO  8
   6           DO  7 J = 1, N
                  DFDX(J, K) = DFDX(J, K)/DX
   7              CONTINUE
               X(K) = XSAVE
               GOTO  10
   8        IF (DXBIG .GT. DXSM) GOTO 9
C/6S
C              CALL SETERR(15HDZ1JAC - FAILED, 15, 2, 1)
C/7S
               CALL SETERR('DZ1JAC - FAILED', 15, 2, 1)
C/
               RETURN
   9        DX = DMIN1(DXBIG, DMAX1(DX, DXSM))
            GOTO  1
  10     CONTINUE
  11     CONTINUE
      RETURN
      END
