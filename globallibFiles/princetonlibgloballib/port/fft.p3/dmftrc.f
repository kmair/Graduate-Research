         SUBROUTINE DMFTRC(N,NNS,A,IA,JA,C,D,ICD,JCD,IFX,T,SGN)
C
C   SUBROUTINE DMFTRC(N,NNS,A,IA,JA,C,D,ICD,JCD,IFX,T,SGN)
C
C   THIS SUBROUTINE COMPUTES MULTIPLE DISCRETE FOURIER TRANSFORMS
C   OF NNS DOUBLE PRECISION INPUT VECTORS (A) OF LENGTH N. THE OUTPUT
C   IS A SET OF (DOUBLE) COMPLEX VECTORS (C + I*D). THAT IS, IF A(J,K)
C   ARE A SET OF REAL INPUT VECTORS (K COUNTS VECTORS, K = 1,NNS,
C   WHOSE ELEMENTS ARE A(J,K), J = 1,N) THEN THE OUTPUT FROM DMFTRC IS
C
C        Y(L,K) =   SUM DEXP(+-2*PI*I*(J-1)*(L-1)/N)*A(J,K)
C                  J=1,N
C
C   WHERE Y(L,K) = C(L,K) + I*D(L,K) AND K = 1,NNS, AND THE SIGN OF THE
C   OF THE EXPONENTIAL IS THAT OF PARAMETER  SGN. THAT IS, DMFTRC
C   COMPUTES NNS (K = 1,NNS) COMPLEX DISCRETE FOURIER TRANSFORMS OF
C   LENGTH N (L = 1,N) SIMULTANEOUSLY.
C
C   IT IS IMPORTANT TO NOTE THAT SINCE THE INPUT VECTORS ARE REAL,
C   THE OUTPUT Y HAS THE FOLLOWING PROPERTY
C
C        Y(L,K) = CONJG(Y(N+2-L,K))
C
C   FOR L = 1,N. HENCE, ONLY THE FIRST N/2+1 ELEMENTS OF THE COMPLEX
C   OUTPUT VECTORS (Y = C+I*D) ARE COMPUTED BY DMFTRC. FURTHERMORE, FROM
C   THE ABOVE RELATION, Y(1,K) AND Y(N/2+1,K) HAVE ZERO IMAGINARY PARTS.
C   ON EXIT, D(1,K) = D(N/2+1+1,K) = 0, THAT IS - D(1+(K-1)*JCD) =
C   D(ICD*(N/2+1)+(K-1)*JCD) = 0, FOR EVERY K = 1,NNS.
C
C INPUT PARAMETERS -
C
C   N     - THE NUMBER OF ELEMENTS IN EACH VECTOR WHOSE FOURIER
C           TRANSFORM IS DESIRED. THIS PARAMETER MUST BE GREATER
C           THAN 1, AND MUST BE EVEN.
C
C   NNS   - THE NUMBER OF VECTORS WHOSE FOURIER TRANSFORM IS
C           DESIRED - NNS MUST BE GREATER THAN 0.
C   A     - A DOUBLE PRECISION ARRAY CONTAINING THE INPUT VECTORS.  THE
C           SPACING BETWEEN EACH ELEMENT OF EVERY VECTOR IS IA, WHILE
C           SPACING BETWEEN VECTORS IS JA. USUALLY, THE COLUMNS
C           OF A WILL BE DISTINCT INPUT VECTORS - ALTHOUGH AN
C           INTERCHANGE OF IA AND JA WILL AFFECT A TRANSPOSITION.
C
C   IA    - THE SPACING BETWEEN ELEMENTS WITHIN EACH INPUT VECTOR
C           (COLUMNS OF A).
C
C   JA    - THE SPACING BETWEEN INPUT VECTORS OF A (SPACING BETWEEN
C           ROW ELEMENTS OF A).
C
C   C     - A DOUBLE PRECISION ARRAY CONTAINING THE REAL PARTS OF THE
C           OUTPUT VECTORS. THE SPACING BETWEEN EACH ELEMENT OF EVERY
C           VECTOR IS ICD, WHILE THE SPACING BETWEEN VECTORS IS
C           JCD. SEE THE DISCUSSION ABOVE FOR THE INPUT ARRAY A.
C
C   D     - A DOUBLE PRECISION ARRAY CONTAINING THE IMAGINARY PARTS OF
C           THE OUTPUT VECTORS. THE SPACING BETWEEN EACH ELEMENT OF
C           EVERY VECTOR IS ICD, WHILE THE SPACING BETWEEN VECTORS IS
C           JCD. SEE THE DISCUSSION ABOVE FOR THE INPUT ARRAY A.
C
C   ICD   - THE SPACING BETWEEN ELEMENTS WITHIN EACH OUTPUT VECTOR OF
C           REAL PARTS (COLUMNS OF C), AND THE SPACING BETWEEN THE
C           ELEMENTS WITHIN EACH VECTOR OF IMAGINARY PARTS (COLUMNS
C           OF D).
C
C   JCD   - THE SPACING BETWEEN OUTPUT VECTORS OF REAL PARTS (SPACING
C           BETWEEN ROW ELEMENTS OF C), AND THE SPACING BETWEEN
C           OUTPUT VECTORS OF IMAGINARY PARTS (SPACING BETWEEN ROW
C           ELEMENTS OF D).
C
C   IFX   - AN INTEGER ARRAY OF LENGTH 25 IN WHICH THE FACTORS OF
C           N/2 WERE SAVED BY THE INITIALIZATION SUBROUTINE DMFTRI
C           THE ELEMENTS OF IFX ARE
C                      IFX(1) = N/2
C                      IFX(2) = M, THE NUMBER OF FACTORS OF N/2
C                      IFX(3) THROUGH IFX(M+2) ARE THE FACTORS OF N/2
C
C   T     - A DOUBLE PRECISION ARRAY OF LENGTH N WHICH CONTAINS THE
C           TRIGONOMETRIC TABLES COMPUTED BY THE INITIALIZATION
C           SUBROUTINE DMFTRI.  THE ELEMENTS OF T ARE
C                      T(2*(K-1)+1) =DCOS(PI*(K-1)/N)
C                      T(2*(K-1)+2) =DSIN(PI*(K-1)/N)
C           WHERE K = 1,N.
C
C   SGN  -  A DOUBLE PRECISION PARAMETER WHICH MUST BE EITHER +1.0 OR
C           -1.0.  THIS PARAMETER DETERMINES THE SIGN OF THE ARGUMENT IN
C           THE EXPONENTIAL DEFINING THE DISCRETE FOURIER TRANSFORM.
C           (SEE ABOVE EXPRESSION FOR Y(L,K)) IF SGN IS
C           NEITHER 1.0 NOR -1.0 A FATAL ERROR RESULTS.
C
      COMMON /CSTAK/DSTAK(500)
      DOUBLE PRECISION DSTAK
C
      EXTERNAL ISTKGT
      INTEGER ISTKGT
      DOUBLE PRECISION A(1),C(1),D(1)
      DOUBLE PRECISION T(2,1),W(500)
      DOUBLE PRECISION SGN
C/6S
C     INTEGER IFX(1)
C/7S
      INTEGER IFX(*)
C/
      INTEGER I,I2,IA,IB,ICD,IFAC,IW,IWN,JA,JCD,LA
      INTEGER N,N2,NF2,NFX,NNS,NP,NP2,NWK
      LOGICAL ITGLE
      EQUIVALENCE (W(1),DSTAK(1))
C
C  INPUT PARAMETER CHECKS
C
C/6S
C     IF (N .LT. 0 .OR. NNS .LT. 0)
C    1   CALL SETERR(33HDMFTRC - N .LT. 0 .OR. NNS .LT. 0,33,3,2)
C/7S
      IF (N .LT. 0 .OR. NNS .LT. 0)
     1   CALL SETERR('DMFTRC - N .LT. 0 .OR. NNS .LT. 0',33,3,2)
C/
      IF (N .EQ. 0) GO TO 999
      IF (NNS .EQ. 0) GO TO 999
C/6S
C     IF(N .NE. 2*IFX(1))
C    1   CALL SETERR(36HDMFTRC - IFX INITIALIZED INCORRECTLY,36,1,2)
C     IF(DABS(SGN).NE.1.0D0)
C    1   CALL SETERR(38HDMFTRC - SIGN PARAMETER .NE. 1. OR -1.,38,2,2)
C/7S
      IF(N .NE. 2*IFX(1))
     1   CALL SETERR('DMFTRC - IFX INITIALIZED INCORRECTLY',36,1,2)
      IF(DABS(SGN).NE.1.0D0)
     1   CALL SETERR('DMFTRC - SIGN PARAMETER .NE. 1. OR -1.',38,2,2)
C/
C
      I2   = 2*IA
      IB   = IA + 1
      LA   = 1
      N2   = N/2
      NP2  = N+2
      NWK  = NP2*NNS
      NP   = NP2/2
C
C  GET WORK SPACE
C
      IW = ISTKGT(NWK,4)
      IWN = IW+NP
C
C   FIRST PASS THROUGH DATA.  LOGICAL VARIABLE ITGLE IS SET BY
C      NFX (THE NUMBER OF FACTORS) BEING EVEN/ODD
C
      NFX  = IFX(2)
      IF (NFX .GT. 0) GO TO 10
C        *** SPECIAL CASE -- N = 2 ***
         CALL DM88FT(N2,NNS,A(1),A(IB),I2,JA,W(IW),W(IWN),1,NP2)
         GO TO 60
 10   IFAC = IFX(3)
      NF2  = NFX/2
      IF(NFX .EQ. NF2+NF2) GO TO 20
C
C        *** ODD NUMBER OF FACTORS ***
C
         CALL DM1FT(A(1),A(IB),W(IW),W(IWN),T,2,
     1                I2,1,JA,NP2,NNS,N2,IFAC,LA,SGN)
         ITGLE = .TRUE.
         IF(NFX .EQ. 1) GO TO 60
         GO TO 30
C
C     *** EVEN NUMBER OF FACTORS ***
C
C     *** COPY INTO WORK SPACE TO ALLOW INPUT AND OUTPUT TO COINCIDE ***
C
 20   CALL DM88FT(N2,NNS,A(1),A(IB),I2,JA, W(IW),W(IWN),1,NP2)
      CALL DM1FT(W(IW),W(IWN),C,D,T,2,1,ICD,NP2,JCD,NNS,N2,IFAC,LA,SGN)
      ITGLE = .FALSE.
C
C *** MAIN LOOP ***
C
 30   DO 50 I = 2,NFX
         LA = LA*IFAC
         IFAC = IFX(I+2)
         IF(ITGLE) GO TO 40
            CALL DM1FT(C,D,W(IW),W(IWN),T,2,
     1                   ICD,1,JCD,NP2,NNS,N2,IFAC,LA,SGN)
            ITGLE = .TRUE.
            GO TO 50
C
 40         CALL DM1FT(W(IW),W(IWN),C,D,T,2,
     1               1,ICD,NP2,JCD,NNS,N2,IFAC,LA,SGN)
            ITGLE = .FALSE.
 50   CONTINUE
C
C  **POST PROCESSING IS VIA - COOLEY, TUKEY, LEWIS, AND WELCH
C
 60   CALL DM33FT(N,NNS,W(IW),W(IWN),W(IW),W(IWN),1,NP2,
     1           C,D,ICD,JCD,T,SGN)
C
      CALL ISTKRL(1)
C
 999  RETURN
      END
