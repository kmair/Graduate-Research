      SUBROUTINE MFTCR(N,NNS,A,B,IAB,JAB,C,IC,JC,IFX,T,SGN)
C
C   SUBROUTINE MFTCR(N,NNS,A,B,IA,JA,C,IC,JC,IFX,T,SGN)
C
C   THIS SUBROUTINE COMPUTES MULTIPLE DISCRETE FOURIER TRANSFORMS
C   OF NNS HALF-COMPLEX INPUT VECTORS (A+I*B) OF LENGTH N/2+1. THE
C   OUTPUT IS A SET OF REAL VECTORS (C). THAT IS, IF X = A + I*B
C   ARE A SET OF COMPLEX INPUT VECTORS (K COUNTS VECTORS, K = 1,NNS,
C   WHOSE ELEMENTS ARE X(J,K), J = 1,N) THEN THE OUTPUT FROM MFTCR IS
C
C        C(L,K) =   SUM  EXP(+-2*PI*I*(J-1)*(L-1)/N)*X(J,K)
C                  J=1,N
C
C   WHERE C(L,K) IS PURELY REAL, AND K = 1,NNS -- THE SIGN OF THE
C   OF THE EXPONENTIAL IS THAT OF PARAMETER  SGN. THAT IS, MFTCR
C   COMPUTES NNS (K = 1,NNS) COMPLEX DISCRETE FOURIER TRANSFORMS OF
C   LENGTH N (L = 1,N) SIMULTANEOUSLY.
C
C   IT IS IMPORTANT TO NOTE THAT SINCE THE OUTPUT VECTORS ARE REAL, THAT
C   THE INPUT X HAS THE FOLLOWING PROPERTY
C
C        X(L,K) = CONJG(X(N+2-L,K))
C
C   FOR L = 1,N. HENCE, ONLY THE FIRST N/2+1 ELEMENTS OF THE COMPLEX
C   INPUT VECTORS (X = A+I*B) ARE USED BY MFTCR. FURTHERMORE, FROM
C   THE ABOVE RELATION, X(1,K) AND X(N/2+1,K) MUST HAVE ZERO IMAGINARY
C   PARTS. IT IS THE USERS RESPONSIBILITY TO ASSURE B(1,K) = B(N/2+1,K)
C   ARE ZERO, THAT IS - B(1+(K-1)*JAB) = B(IAB*(N/2+1)+(K-1)*JAB) = 0.
C
C INPUT PARAMETERS -
C
C   N     - THE NUMBER OF ELEMENTS IN EACH VECTOR WHOSE FOURIER
C           TRANSFORM IS DESIRED. THIS PARAMETER MUST BE GREATER
C           THAN 1, AND MUST BE EVEN.
C
C   NNS   - THE NUMBER OF VECTORS WHOSE FOURIER TRANSFORM IS
C           DESIRED - NNS MUST BE GREATER THAN 0.
C
C   A     - A REAL ARRAY CONTAINING THE REAL PARTS OF THE
C           INPUT VECTORS. THE SPACING BETWEEN ELEMENTS OF EACH VECTOR
C           IS IAB, WHILE THE SPACING BETWEEN VECTORS IS JAB.
C           USUALLY, THE COLUMNS OF A WILL BE THE INPUT VECTORS -
C           ALTHOUGH AN INTERCHANGE OF IAB AND JAB WILL AFFECT A
C           TRANSPOSITION.
C
C   B     - A REAL ARRAY CONTAINING THE IMAGINARY PARTS OF
C           THE INPUT VECTORS. THE SPACING BETWEEN EACH ELEMENT OF EVERY
C           VECTOR IS IAB, WHILE THE SPACING BETWEEN VECTORS IS
C           JAB. SEE THE DISCUSSION ABOVE FOR THE INPUT ARRAY A.
C
C   IAB   - THE SPACING BETWEEN ELEMENTS WITHIN EACH INPUT VECTOR OF
C           REAL PARTS (COLUMNS OF A), AND THE SPACING BETWEEN THE
C           ELEMENTS WITHIN EACH VECTOR OF IMAGINARY PARTS (COLUMNS
C           OF B).
C
C   JAB   - THE SPACING BETWEEN INPUT VECTORS OF REAL PARTS (SPACING
C           BETWEEN ROW ELEMENTS OF A), AND THE SPACING BETWEEN
C           INPUT VECTORS OF IMAGINARY PARTS (SPACING BETWEEN ROW
C           ELEMENTS OF B).
C
C   C     - A REAL ARRAY CONTAINING THE OUTPUT VECTORS. THE
C           SPACING BETWEEN EACH ELEMENT OF EVERY VECTOR IS IC, WHILE
C           THE SPACING BETWEEN VECTORS IS JC.
C
C   IC    - THE SPACING BETWEEN ELEMENTS WITHIN EACH OUTPUT VECTOR
C           (COLUMNS OF C).
C
C   JC    - THE SPACING BETWEEN OUTPUT VECTORS OF C (SPACING BETWEEN
C           ROW ELEMENTS OF C).
C
C   IFX   - AN INTEGER ARRAY OF LENGTH 25 IN WHICH THE FACTORS OF
C           N/2 WERE SAVED BY THE INITIALIZATION SUBROUTINE MFTRI
C           THE ELEMENTS OF IFX ARE
C                      IFX(1) = N/2
C                      IFX(2) = M, THE NUMBER OF FACTORS OF N/2
C                      IFX(3) THROUGH IFX(M+2) ARE THE FACTORS OF N/2
C
C   T     - A REAL ARRAY OF LENGTH N WHICH CONTAINS THE
C           TRIGONOMETRIC TABLES COMPUTED BY THE INITIALIZATION
C           SUBROUTINE MFTRI.  THE ELEMENTS OF T ARE
C                      T(2*(K-1)+1) =  COS(PI*(K-1)/N)
C                      T(2*(K-1)+2) = SIN(PI*(K-1)/N)
C           WHERE K = 1,N.
C
C   SGN  -  A REAL PARAMETER WHICH MUST BE EITHER +1.0 OR
C           -1.0.  THIS PARAMETER DETERMINES THE SIGN OF THE ARGUMENT IN
C           THE EXPONENTIAL DEFINING THE DISCRETE FOURIER TRANSFORM.
C           (SEE ABOVE EXPRESSION FOR C(L,K)). IF SGN IS
C           NEITHER 1.0 NOR -1.0 A FATAL ERROR RESULTS.
C
      COMMON /CSTAK/DSTAK(500)
      DOUBLE PRECISION DSTAK
C
      EXTERNAL ISTKGT
      INTEGER ISTKGT
      REAL A(1),B(1),C(1)
      REAL T(2,1),W(1000)
      REAL SGN
C/6S
C     INTEGER IFX(1)
C/7S
      INTEGER IFX(*)
C/
      INTEGER I,I2,IAB,IC,ID,IFAC,IW,IWN,JAB,JC,LA,N
      INTEGER N2,NF2,NFX,NNS,NP,NP2,NWK
      LOGICAL EVEN, ITGLE
      EQUIVALENCE (W(1),DSTAK(1))
C
C  INPUT PARAMETER CHECKS
C
C/6S
C     IF (N .LT. 0 .OR. NNS .LT. 0)
C    1   CALL SETERR(33H MFTCR - N .LT. 0 .OR. NNS .LT. 0,33,3,2)
C/7S
      IF (N .LT. 0 .OR. NNS .LT. 0)
     1   CALL SETERR(' MFTCR - N .LT. 0 .OR. NNS .LT. 0',33,3,2)
C/
      IF (N .EQ. 0) GO TO 999
      IF (NNS .EQ. 0) GO TO 999
C/6S
C     IF(N .NE. 2*IFX(1))
C    1   CALL SETERR(36H MFTCR - IFX INITIALIZED INCORRECTLY,36,1,2)
C     IF( ABS(SGN).NE.1.0E0)
C    1   CALL SETERR(38H MFTCR - SIGN PARAMETER .NE. 1. OR -1.,38,2,2)
C/7S
      IF(N .NE. 2*IFX(1))
     1   CALL SETERR(' MFTCR - IFX INITIALIZED INCORRECTLY',36,1,2)
      IF( ABS(SGN).NE.1.0E0)
     1   CALL SETERR(' MFTCR - SIGN PARAMETER .NE. 1. OR -1.',38,2,2)
C/
C
      I2   = 2*IC
      ID   = IC + 1
      N2   = N/2
      NFX  = IFX(2)
      NF2  = NFX/2
      EVEN = NFX .EQ. NF2+NF2
      NP2  = N+2
      NP   = NP2/2
      NWK  = NP2*NNS
C
C   GET WORK SPACE
C
      IW = ISTKGT(NWK,3)
      IWN = IW+NP
C
C**PRE-PROCESSING IS VIA - COOLEY, TUKEY, LEWIS, AND WELCH
C
      CALL M44FT(N,NNS,A,B,IAB,JAB,W(IW),W(IWN),1,NP2,T,SGN)
      ITGLE = .TRUE.
      IFAC = 1
      LA   = 1
C
C   MAIN LOOP
C
      DO 20 I = 1,NFX
         LA = LA*IFAC
         IFAC = IFX(I+2)
         IF(ITGLE) GO TO 10
            CALL M1FT(C(1),C(ID),W(IW),W(IWN),T,2,
     1                I2,1,JC,NP2,NNS,N2,IFAC,LA,SGN)
            ITGLE = .TRUE.
            GO TO 20
 10         CALL M1FT(W(IW),W(IWN),C(1),C(ID),T,2,
     1                1,I2,NP2,JC,NNS,N2,IFAC,LA,SGN)
            ITGLE = .FALSE.
C           ENDIF
 20      CONTINUE
C
      IF (EVEN) CALL M88FT(N2,NNS,W(IW),W(IWN),1,NP2,C(1),C(ID),I2,JC)
C
      CALL ISTKRL(1)
C
 999  RETURN
      END
