      REAL FUNCTION EESFM(K,T,N,A,F,X,NX,MEST,EEST)
C
C
C PURPOSE -
C
C   TO FIND THE MAXIMUM ABSOLUTE DIFFERENCE BETWEEN F(Y) AND S(Y),
C   WHERE S(Y) IS THE B-SPLINE GIVEN BY (K,T,N,A), ON EACH INTERVA
C   (X(I),X(I+1)) FOR I = 1,...,NX-1.
C
C METHOD -
C
C   THE MAXIMUM IS FOUND (ESTIMATED) BY
C   SEARCHING EACH T INTERVAL AT A PATTERN OF MEST POINTS GIVEN BY
C   COS(THETA) WHERE MEST EQUALLY SPACED THETA VALUES ON (-PI,0) A
C
C MNEMONIC - DOUBLE PRECISION ESTIMATION OF THE ERROR IN A
C            SPLINE FIT TO A FUNCTION, USING MEST POINTS IN THE SE
C
C INPUT -
C
C   K      - THE B-SPLINE ORDER USED.
C   T      - THE B-SPLINE MESH.
C   N      - THE NUMBER OF POINTS IN THE MESH T.
C   A      - THE B-SPLINE COEFFICIENTS.
C   F      - THE NAME OF A USER SUPPLIED SUBROUTINE
C
C                    F(X,NX,FX,WX)
C
C            F MUST DECLARED EXTERNAL IN THE USERS CALLING PROGRAM
C
C            INPUT -
C
C              X    - THE POINTS WHERE F IS TO BE EVALUATED.
C              NX   - THE LENGTH OF THE ARRAY X.
C
C            OUTPUT -
C
C              FX - FX(I) = F( X(I) ), I = 1,...,NX.
C              WX - WX IS A DUMMY ARRAY OF LENGTH NX TO MAKE THE C
C                   CONSISTANT WITH THAT TO F IN DL2SFF.
C   X      - THE INTERVALS ON WHICH THE ERROR IS DESIRED.
C            X MUST BE MONOTONE INCREASING.
C   NX     - THE NUMBER OF POINTS IN X.
C   MEST   - THE NUMBER OF POINTS TO BE USED SEARCHING EACH T INTE
C
C OUTPUT -
C
C   EEST - EEST(I) IS THE MAXIMUM ERROR FOUND ON THE I-TH X INTERV
C          FOR I = 1,...,NX-1.
C          IF X(I) = X(I+1) THEN EEST(I) IS MEANINGLESS.
C
C          EEST(NX) = MAX(EEST(1),...,EEST(NX-1))
C
C   PROCEDURE VALUE - EEST(NX).
C
C SCRATCH SPACE ALLOCATED - 4*K + MEST REAL WORDS.
C
C ERROR STATES -
C
C   1 - K.LT.2.
C   2 - N.LE.K.
C   3 - NX.LT.2.
C   4 - MEST.LT.1.
C   5 - T NOT MONOTONE INCREASING.
C   6 - (X(1),X(NX)) NOT PART OF (T(1),T(N)).
C   7 - X IS NOT MONOTONE INCREASING.
C
      INTEGER I,IXEST,ISTKGT
      REAL VALUE,EESFP
      LOGICAL LS(1000)
      INTEGER IS(1000)
      REAL RS(1000)
      REAL WS(500)
      DOUBLE PRECISION DS(500)
      COMMON /CSTAK/DS
      EXTERNAL F
      INTEGER K,N,NX,MEST
      REAL T(N),A(1),X(NX),EEST(NX)
C
      EQUIVALENCE ( DS(1),WS(1),RS(1),IS(1),LS(1) )
C
C
C A(N-K).
C
C
C
C CHECK THE INPUT.
C
      IF( K.GE.2 )      GOTO 1000
C/6S
C     CALL SETERR(15H EESFM - K.LT.2,15,1,2)
C/7S
      CALL SETERR(' EESFM - K.LT.2',15,1,2)
C/
 1000 CONTINUE
      IF( N.GT.K )      GOTO 1002
C/6S
C     CALL SETERR(15H EESFM - N.LE.K,15,2,2)
C/7S
      CALL SETERR(' EESFM - N.LE.K',15,2,2)
C/
 1002 CONTINUE
      IF( NX.GE.2 )      GOTO 1004
C/6S
C     CALL SETERR(16H EESFM - NX.LT.2,16,3,2)
C/7S
      CALL SETERR(' EESFM - NX.LT.2',16,3,2)
C/
 1004 CONTINUE
      IF( MEST.GE.1 )      GOTO 1006
C/6S
C     CALL SETERR(18H EESFM - MEST.LT.1,18,4,2)
C/7S
      CALL SETERR(' EESFM - MEST.LT.1',18,4,2)
C/
 1006 CONTINUE
C
      I21010 = N-1
      DO 1008 I = 1, I21010
      IF( T(I).LE.T(I+1) )      GOTO 1011
C/6S
C     CALL SETERR(34H EESFM - T NOT MONOTONE INCREASING,34,5,2)
C/7S
      CALL SETERR(' EESFM - T NOT MONOTONE INCREASING',34,5,2)
C/
 1011 CONTINUE
      IF( I+K.LE.N )      GOTO 1013
      GOTO 1008
 1013 CONTINUE
      IX1005 = I+K
      IF( T(IX1005).GT.T(I) )      GOTO 1015
C/6S
C     CALL SETERR(34H EESFM - T NOT MONOTONE INCREASING,34,5,2)
C/7S
      CALL SETERR(' EESFM - T NOT MONOTONE INCREASING',34,5,2)
C/
 1015 CONTINUE
C
 1008 CONTINUE
 1009 CONTINUE
      IF( X(1).GE.T(1).AND.X(NX).LE.T(N) )      GOTO 1017
C/6S
C           CALL SETERR(45H EESFM - (X(1),X(NX)) NOT PART OF (T(1),T(N))
C    *,45,6,2)
C/7S
            CALL SETERR(' EESFM - (X(1),X(NX)) NOT PART OF (T(1),T(N))'
     *,45,6,2)
C/
C
 1017 CONTINUE
      I21021 = NX-1
      DO 1019 I = 1, I21021
      IF( X(I).LE.X(I+1) )      GOTO 1022
C/6S
C           CALL SETERR(37H EESFM - X IS NOT MONOTONE INCREASING,37,7,2)
C/7S
            CALL SETERR(' EESFM - X IS NOT MONOTONE INCREASING',37,7,2)
C/
 1022 CONTINUE
C
 1019 CONTINUE
 1020 CONTINUE
      CALL ENTER(1)
C
C ALLOCATE AND MAKE THE XEST ARRAY.
C
      IXEST = ISTKGT(MEST,3)
C
      IF( MEST.LE.1 )      GOTO 1024
      CALL UMD(-4.0E0*ATAN(1.0E0),0.0E0,MEST,WS(IXEST))
      GOTO 1025
 1024 CONTINUE
      WS(IXEST) = -2.0E0*ATAN(1.0E0)
C
 1025 CONTINUE
      IF( MEST.LE.1 )      GOTO 1026
      WS(IXEST) = 0.5E0*(WS(IXEST)+WS(IXEST+1))
 1026 CONTINUE
      IF( MEST.LE.2 )      GOTO 1028
      IX1003 = IXEST+MEST-2
      IX1004 = IXEST+MEST-1
      IX1001 = IXEST+MEST-1
      WS(IX1001) = 0.5E0*(WS(IX1003)+WS(IX1004))
C
 1028 CONTINUE
      DO 1030 I = 1, MEST
      IX1005 = IXEST+I-1
      IX1001 = IXEST+I-1
      WS(IX1001) = COS(WS(IX1005))
C
 1030 CONTINUE
 1031 CONTINUE
      VALUE = EESFP(K,T,N,A,F,X,NX,WS(IXEST),MEST,EEST)
C
      CALL LEAVE
C
      EESFM = VALUE
      RETURN
C
      END
