      REAL FUNCTION EEBSI(K,T1,N1,A1,T2,N2,A2,X,NX,EREST1,EREST2)
C
C
C PURPOSE - TO ESTIMATE THE ERROR IN A B-SPLINE APPROXIMATION.
C
C MNEMONIC - DOUBLE PRECISION ESTIMATION OF THE ERROR IN A B-SPLIN
C            APPROXIMATION, OVER GIVEN INTERVALS.
C
C METHOD -
C
C   LET (K,T1,N1,A1) REPRESENT AN APPROXIMATION Y1 TO SOME FUNCTIO
C   USING B-SPLINES ON THE MESH T1 WITH COEFFICIENTS A1.
C   LET (K,T2,N2,A2) REPRESENT A REFINEMENT Y2 OF THE (K,T1,N1,A1)
C   APPROXIMATION.
C
C   LET T BE THE UNION OF THE MESHES T1 AND T2.
C
C   LET MEST = (K-1)*PI+1 .
C
C   THE ERROR IN THE (K,T2,N2,A2) APPROXIMATION IS ESTIMATED ON EA
C   INTERVAL (X(I),X(I+1)), BY SEACHING AT A PATTERN OF MEST POINT
C   IN EACH T INTERVAL INTERSECTING IT, TO BE
C
C      MAX(ABS(Y2-Y1))/((H1(I)/H2(I))**K-1)
C
C   WHERE H1(I) IS DEFINED TO BE THE LENGTH OF THE LARGEST MESH IN
C   OF T1 INTERSECTING (X(I),X(I+1)). SIMILARLY FOR H2(I).
C
C   THE PATTERN OF POINTS XEST USED IS COS(THETA) WHERE THE MEST T
C   VALUES ARE UNIFORMLY DISTRIBUTED ON (-PI,0).
C
C   THIS SEARCH PATTERN IS SUFFICIENT TO GUARANTEE THAT THE ERROR
C   ESTIMATE IS COMPUTED ACCURATE TO WITHIN A FACTOR OF 2.
C
C INPUT -
C
C   K    - THE ORDER OF THE B-SPLINES USED.
C          2 .LE. K IS ASSUMED.
C   T1   - THE UNREFINED B-SPLINE MESH.
C   N1   - THE NUMBER OF POINTS IN THE T1 MESH.
C   A1   - THE UNREFINED B-SPLINE COEFFICIENTS.
C   T2   - THE REFINED B-SPLINE MESH.
C   N2   - THE NUMBER OF POINTS IN THE T2 MESH.
C   A2   - THE REFINED B-SPLINE COEFFICIENTS.
C   X    - (X(I),X(I+1)) GIVES THE I-TH INTERVAL AN ERROR ESTIMATE
C          DESIRED FOR, I = 1,...,NX-1.
C          X MUST BE MONOTONE INCREASING.
C   NX   - THE NUMBER OF POINTS IN X.
C
C OUTPUT -
C
C   EREST1 - EREST1(I) IS THE ERROR ESTIMATE FOR THE T1
C            APPROXIMATION ON THE I-TH X INTERVAL, I = 1,...,NX-1.
C            EREST1(I) = R1MACH(2) IS RETURNED IF T2 IS NOT A REFI
C            OF T1 ON (X(I),X(I+1)).
C            IF X(I) = X(I+1) THEN EREST1(I) IS MEANINGLESS.
C
C            EREST1(NX) = MAX(EREST1(1),...,EREST1(NX-1)).
C
C   EREST2 - EREST2(I) IS THE ERROR ESTIMATE FOR THE T2
C            APPROXIMATION ON THE I-TH X INTERVAL, I = 1,...,NX-1.
C            EREST2(I) = R1MACH(2) IS RETURNED IF T2 IS NOT A REFI
C            OF T1 ON (X(I),X(I+1)).
C            IF X(I) = X(I+1) THEN EREST2(I) IS MEANINGLESS.
C
C            EREST2(NX) = MAX(EREST2(1),...,EREST2(NX-1)).
C
C   PROCEDURE VALUE - EREST1(NX).
C
C SCRATCH SPACE ALLOCATED - 5*K + MEST + NX REAL WORDS.
C
C ERROR STATES -
C
C   1 - K.LT.2.
C   2 - N1.LE.K.
C   3 - N2.LE.K.
C   4 - NX.LT.2.
C   5 - (T1(1),T1(N1)) IS NOT (T2(1),T2(N2)).
C   6 - (X(1),X(NX)) NOT PART OF (T1(1),T1(N1)).
C   7 - T1 NOT MONOTONE INCREASING.
C   8 - T2 NOT MONOTONE INCREASING.
C   9 - X IS NOT MONOTONE INCREASING.
C
      INTEGER I,MEST
      REAL EEBSM
      INTEGER K,N1,N2,NX
      REAL T1(N1),A1(1),T2(N2),A2(1),X(NX),EREST1(NX),EREST2(NX)
C
C
C
C REAL A1(N1-K),A2(N2-K)
C
C
C CHECK THE INPUT.
C
      IF( K.GE.2 )      GOTO 1000
C/6S
C     CALL SETERR(15H EEBSI - K.LT.2,15,1,2)
C/7S
      CALL SETERR(' EEBSI - K.LT.2',15,1,2)
C/
 1000 CONTINUE
      IF( N1.GT.K )      GOTO 1002
C/6S
C     CALL SETERR(16H EEBSI - N1.LE.K,16,2,2)
C/7S
      CALL SETERR(' EEBSI - N1.LE.K',16,2,2)
C/
 1002 CONTINUE
      IF( N2.GT.K )      GOTO 1004
C/6S
C     CALL SETERR(16H EEBSI - N2.LE.K,16,3,2)
C/7S
      CALL SETERR(' EEBSI - N2.LE.K',16,3,2)
C/
 1004 CONTINUE
      IF( NX.GE.2 )      GOTO 1006
C/6S
C     CALL SETERR(16H EEBSI - NX.LT.2,16,4,2)
C/7S
      CALL SETERR(' EEBSI - NX.LT.2',16,4,2)
C/
C
 1006 CONTINUE
      IF( T1(1).EQ.T2(1).AND.T1(N1).EQ.T2(N2) )      GOTO 1008
C/6S
C           CALL SETERR(45H EEBSI - (T1(1),T1(N1)) IS NOT (T2(1),T2(N2))
C    *,45,5,2)
C/7S
            CALL SETERR(' EEBSI - (T1(1),T1(N1)) IS NOT (T2(1),T2(N2))'
     *,45,5,2)
C/
C
 1008 CONTINUE
      IF( X(1).GE.T1(1).AND.X(NX).LE.T1(N1) )      GOTO 1010
C/6S
C           CALL SETERR(48H EEBSI - (X(1),X(NX)) NOT PART OF (T1(1),T1(N
C    *1)),48,6,2)
C/7S
            CALL SETERR(' EEBSI - (X(1),X(NX)) NOT PART OF (T1(1),T1(N1)
     *)',48,6,2)
C/
C
 1010 CONTINUE
      I21014 = N1-1
      DO 1012 I = 1, I21014
      IF( T1(I).LE.T1(I+1) )      GOTO 1015
C/6S
C     CALL SETERR(35H EEBSI - T1 NOT MONOTONE INCREASING,35,7,2)
C/7S
      CALL SETERR(' EEBSI - T1 NOT MONOTONE INCREASING',35,7,2)
C/
 1015 CONTINUE
      IF( I+K.LE.N1 )      GOTO 1017
      GOTO 1012
 1017 CONTINUE
      IX1005 = I+K
      IF( T1(IX1005).GT.T1(I) )      GOTO 1019
C/6S
C     CALL SETERR(35H EEBSI - T1 NOT MONOTONE INCREASING,35,7,2)
C/7S
      CALL SETERR(' EEBSI - T1 NOT MONOTONE INCREASING',35,7,2)
C/
 1019 CONTINUE
 1012 CONTINUE
 1013 CONTINUE
      I21023 = N2-1
      DO 1021 I = 1, I21023
      IF( T2(I).LE.T2(I+1) )      GOTO 1024
C/6S
C     CALL SETERR(35H EEBSI - T2 NOT MONOTONE INCREASING,35,8,2)
C/7S
      CALL SETERR(' EEBSI - T2 NOT MONOTONE INCREASING',35,8,2)
C/
 1024 CONTINUE
      IF( I+K.LE.N2 )      GOTO 1026
      GOTO 1021
 1026 CONTINUE
      IX1005 = I+K
      IF( T2(IX1005).GT.T2(I) )      GOTO 1028
C/6S
C     CALL SETERR(35H EEBSI - T2 NOT MONOTONE INCREASING,35,8,2)
C/7S
      CALL SETERR(' EEBSI - T2 NOT MONOTONE INCREASING',35,8,2)
C/
 1028 CONTINUE
C
 1021 CONTINUE
 1022 CONTINUE
      I21032 = NX-1
      DO 1030 I = 1, I21032
      IF( X(I).LE.X(I+1) )      GOTO 1033
C/6S
C           CALL SETERR(37H EEBSI - X IS NOT MONOTONE INCREASING,37,9,2)
C/7S
            CALL SETERR(' EEBSI - X IS NOT MONOTONE INCREASING',37,9,2)
C/
 1033 CONTINUE
C
 1030 CONTINUE
 1031 CONTINUE
      MEST = FLOAT(K-1)*4.0E0*ATAN(1.0E0)+1.0E0
C
      EEBSI = EEBSM(K,T1,N1,A1,T2,N2,A2,X,NX,MEST,EREST1,EREST2)
      RETURN
C
      END
