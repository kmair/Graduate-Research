      INTEGER FUNCTION IDMNPB(X,NX,N,K,NT)
C
C
C TO CREATE A B-SPLINE MESH FROM AN ARRAY OF FITTING POINTS.
C
C METHOD - USE AT AT LEAST N FITTING POINTS X IN ALL MESH INTERVAL
C
C MNEMONIC - INTEGER POINTER TO THE DOUBLE PRECISION MESH
C            USING N POINTS PER INTERVAL, FOR A B-SPLINE.
C
C INPUT -
C
C    X  - THE MONOTONE INCREASING ARRAY OF FITTING POINTS.
C         ANY MULTIPLICITIES IN X WILL BE IGNORED.
C    NX - THE NUMBER OF POINTS IN THE ARRAY X.
C    N  - THE NUMBER OF FITTING POINTS TO USE PER MESH INTERVAL.
C         N=2 GIVES A MESH SUITABLE FOR INTERPOLATION OF FUNCTION
C         VALUES AT THE X(I), I=1,...,NX.
C         THE LARGER N IS, THE SMOOTHER THE FIT WILL BE.
C    K  - THE ORDER FOR THE B-SPLINE MESH,
C         THE MULTIPLICITY FOR THE FIRST AND LAST MESH POINTS.
C
C OUTPUT -
C
C    NT     - THE NUMBER OF POINTS IN THE MESH.
C
C             IF ( NDX .GE. MAX(2*N,N*(K+1-NDX)+2*NDX-K)-1 )
C
C               NT = 2*K + 1 +(NDX-MAX(2*N,N*(K+1-NDX)+2*NDX-K)+1)
C
C             OTHERWISE
C
C               NT = 2*K
C
C             WHERE NDX IS THE NUMBER OF DISTINCT POINTS IN THE AR
C    IDMNPB - THE POINTER TO THE LONG REAL MESH IN THE STACK.
C             THE MESH POINTS ARE TAKEN FROM THE ARRAY X.
C
C ERROR STATES -
C
C   1 - NX .LT. 2.
C   2 - N .LT. 2
C   3 - K .LT. 1.
C   4 - THE ARRAY X IS NOT MONOTONE INCREASING.
C   5 - THE NUMBER OF DISTINCT POINTS IN THE ARRAY X IS ONE.
C
C STORAGE ALLOCATED, AND LEFT ON THE STACK,
C
C          NT
C
C LONG REAL LOCATIONS
C
      INTEGER NX
      INTEGER N, K, NT
      DOUBLE PRECISION X(NX)
      COMMON /CSTAK/ DS
      DOUBLE PRECISION DS(500)
      INTEGER IS(1000), NL, NR, I, NDX, MAX0
      INTEGER IDMNP1
      REAL RS(1000)
      LOGICAL LS(1000)
      DOUBLE PRECISION WS(500)
      EQUIVALENCE (DS(1), WS(1), RS(1), IS(1), LS(1))
C/6S
C     IF (NX .LT. 2) CALL SETERR(16HIDMNPB - NX.LT.2, 16, 1, 2)
C     IF (N .LT. 2) CALL SETERR(15HIDMNPB - N.LT.2, 15, 2, 2)
C     IF (K .LT. 1) CALL SETERR(15HIDMNPB - K.LT.1, 15, 3, 2)
C/7S
      IF (NX .LT. 2) CALL SETERR('IDMNPB - NX.LT.2', 16, 1, 2)
      IF (N .LT. 2) CALL SETERR('IDMNPB - N.LT.2', 15, 2, 2)
      IF (K .LT. 1) CALL SETERR('IDMNPB - K.LT.1', 15, 3, 2)
C/
      NDX = 1
      DO  1 I = 2, NX
C/6S
C        IF (X(I) .LT. X(I-1)) CALL SETERR(
C    1      37HIDMNPB - X IS NOT MONOTONE INCREASING, 37, 4, 2)
C/7S
         IF (X(I) .LT. X(I-1)) CALL SETERR(
     1      'IDMNPB - X IS NOT MONOTONE INCREASING', 37, 4, 2)
C/
         IF (X(I) .GT. X(I-1)) NDX = NDX+1
   1     CONTINUE
C/6S
C     IF (NDX .EQ. 1) CALL SETERR(
C    1   38HIDMNPB - ONLY ONE POINT IN THE ARRAY X, 38, 5, 2)
C/7S
      IF (NDX .EQ. 1) CALL SETERR(
     1   'IDMNPB - ONLY ONE POINT IN THE ARRAY X', 38, 5, 2)
C/
      IF (N .LE. 2 .OR. NDX .LT. 2*K+3) GOTO 2
         NL = N
         NR = N
         GOTO  3
   2     NL = (N*(K+1-NDX)+2*NDX-K)/2
         NR = N*(K+1-NDX)+2*NDX-K-NL
         NL = MAX0(NL, N)
         NR = MAX0(NR, N)
   3  IDMNPB = IDMNP1(X, NX, NL, N, NR, K, NT)
      RETURN
      END
