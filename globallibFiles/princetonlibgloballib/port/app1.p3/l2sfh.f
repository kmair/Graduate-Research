      SUBROUTINE L2SFH(FW,MD,K,T,NT,A)
C
C
C TO FIT A FUNCTION F WITH A B-SPLINE.
C
C THE MNEMONIC IS - DOUBLE PRECISION L2 SPLINE FIT TO A FUNCTION,
C                   USING HERMITE DATA.
C
C METHOD - WEIGHTED LEAST-SQUARES FIT.
C
C   THE FUNCTIONAL
C
C       SUM(J = 1,...,MD) INTEGRAL ( T(1) TO T(NT) )
C          ( (F-SUP-(J-1) - F-SUP-(J-1))**2 * W-SUB-J (X) ) DX
C
C   IS MINIMIZED OVER ALL B-SPLINES F OF ORDER K ON THE MESH T.
C
C   THE INTEGRALS ARE DONE PIECEWISE WITH A CEIL( K/MD ) POINT
C   GAUSSIAN-QUADRATURE RULE.
C
C INPUT -
C
C   FW     - THE NAME OF A USER SUPPLIED SUBROUTINE
C
C                    FW(X,NX,MD,FX,WX)
C
C            F MUST BE DECLARED EXTERNAL IN THE USER S CALLING PROGRAM
C
C            INPUT -
C
C              X    - THE POINTS WHERE F AND W ARE TO BE EVALUATED
C              NX   - THE LENGTH OF THE ARRAY X.
C              MD   - THE NUMBER OF DERIVATIVES TO BE EVALUATED AN
C
C            OUTPUT -
C
C              FX - FX(I,J) = THE (J-1)-ST DERIVATIVE OF F AT X(I)
C                             J = 1,...,MD, I = 1,...,NX.
C              WX - WX(I,J) = THE WEIGHT W-SUB-J (X) FOR THE
C                             (J-1)-ST DERIVATIVE OF F AT X(I),
C                             J = 1,...,MD, I = 1,...,NX.
C                   IF WX IS NOT SET, WX = 1 IS THE DEFAULT.
C
C   MD     - THE NUMBER OF DERIVATIVES TO BE USED IN THE FITTING.
C   K      - THE ORDER OF THE B-SPLINE TO BE USED.
C   T      - THE B-SPLINE MESH TO BE USED IN THE FITTING PROCEDURE
C   NT     - THE NUMBER OF POINTS IN THE MESH T.
C
C OUTPUT -
C
C   A      - THE COEFFICIENTS FOR THE B-SPLINE APPROXIMATION.
C
C SCRATCH SPACE ALLOCATED -
C
C   LET NDT = THE NUMBER OF DISTINCT POINTS IN THE B-SPLINE MESH T
C   MQ = CEIL( K/MD ), AND NXFIT = (NDT-1) * MQ
C
C   THEN,         S( L2SFH) =
C
C     2*MQ +
C
C     MAX( 17*MQ , NXFIT*(2*MD+1) +
C
C                  MAX( S(FW) , (NT-K+MD)*K +
C
C                               MAX( 3*K , K*(MIN((K+1)/2,MD) + 1)
C
C                               MD INTEGER ) )
C
C   WORDS.
C
C ERROR STATES -
C
C   1 - MD.LT.1.
C   2 - MD.GT.K.
C   3 - K.LT.2.
C   4 - NT.LE.K.
C   5 - THE MESH T IS NOT MONOTONE INCREASING.
C   6 - MULT(T(I)).GT.K.
C   7 - NEGATIVE WEIGHTS. (RECOVERABLE)
C   8 - SINGULAR LEAST SQUARES MATRIX. (RECOVERABLE)
C
      LOGICAL LS(1000)
      INTEGER IS(1000)
      REAL RS(1000)
      REAL WS(500)
      DOUBLE PRECISION DS(500)
      COMMON /CSTAK/DS
      INTEGER I,NDT,NERROR,NERR
      EXTERNAL FW
      INTEGER MD,K,NT
      REAL T(NT),A(1)
C
      EQUIVALENCE ( DS(1),WS(1),RS(1),IS(1),LS(1) )
C
C
C A(NT-K)
C
C
C
      CALL ENTER(1)
C
C CHECK THE INPUT FOR ERRORS.
C
      IF( MD.GE.1 )      GOTO 1000
C/6S
C     CALL SETERR(16H L2SFH - MD.LT.1,16,1,2)
C/7S
      CALL SETERR(' L2SFH - MD.LT.1',16,1,2)
C/
 1000 CONTINUE
      IF( MD.LE.K )      GOTO 1002
C/6S
C     CALL SETERR(16H L2SFH - MD.GT.K,16,2,2)
C/7S
      CALL SETERR(' L2SFH - MD.GT.K',16,2,2)
C/
 1002 CONTINUE
      IF( K.GE.2 )      GOTO 1004
C/6S
C     CALL SETERR(15H L2SFH - K.LT.2,15,3,2)
C/7S
      CALL SETERR(' L2SFH - K.LT.2',15,3,2)
C/
 1004 CONTINUE
      IF( NT.GT.K )      GOTO 1006
C/6S
C     CALL SETERR(16H L2SFH - NT.LE.K,16,4,2)
C/7S
      CALL SETERR(' L2SFH - NT.LE.K',16,4,2)
C/
 1006 CONTINUE
C
C GET THE FITTING POINTS.
C
      NDT = 1
C FIND THE NUMBER OF DISTINCT MESH POINTS.
      I21010 = NT-1
      DO 1008 I = 1, I21010
      IF( T(I).LE.T(I+1) )      GOTO 1011
C/6S
C           CALL SETERR(46H L2SFH - THE MESH T IS NOT MONOTONE INCREASIN
C    *G,46,5,2)
C/7S
            CALL SETERR(' L2SFH - THE MESH T IS NOT MONOTONE INCREASING'
     *,46,5,2)
C/
 1011 CONTINUE
      IF( T(I+1).LE.T(I) )      GOTO 1013
      NDT = NDT + (1)
 1013 CONTINUE
      IF( I+K.LE.NT )      GOTO 1015
      GOTO 1008
 1015 CONTINUE
      IX1005 = I+K
      IF( T(IX1005).NE.T(I) )      GOTO 1017
C/6S
C     CALL SETERR(24H L2SFH - MULT(T(I)).GT.K,24,6,2)
C/7S
      CALL SETERR(' L2SFH - MULT(T(I)).GT.K',24,6,2)
C/
 1017 CONTINUE
C
 1008 CONTINUE
 1009 CONTINUE
      CALL L2SFG(FW,MD,(K+MD-1)/MD,K,T,NT,A)
C
      IF( NERROR(NERR).NE.9 )      GOTO 1019
      CALL ERROFF
C/6S
C     CALL SETERR(25H L2SFH - NEGATIVE WEIGHTS,25,7,1)
C/7S
      CALL SETERR(' L2SFH - NEGATIVE WEIGHTS',25,7,1)
C/
      GOTO 1020
 1019 CONTINUE
      IF( NERROR(NERR).NE.10 )      GOTO 1021
      CALL ERROFF
C/6S
C           CALL SETERR(38H L2SFH - SINGULAR LEAST SQUARES MATRIX,38,8,1
C    *)
C/7S
            CALL SETERR(' L2SFH - SINGULAR LEAST SQUARES MATRIX',38,8,1
     *)
C/
C
 1021 CONTINUE
 1020 CONTINUE
      CALL LEAVE
C
      RETURN
C
      END
