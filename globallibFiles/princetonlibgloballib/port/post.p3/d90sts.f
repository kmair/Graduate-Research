      SUBROUTINE D90STS(U, NU, K, X, NX, V, NV, TSTART, TSTOP, DT,
     1   AF, AF1, BC, BC1, D, D1, ERROR, ERROR1, ERRPAR, INMI, SCALE,
     2   HANDLE, HANLE1, BETA, GAMMA, DELTA, N, KMAX, MMAX, XPOLY,
     3   KINIT, HFRACT, STEPS, NLEQS)
      INTEGER MMAX
      EXTERNAL AF, AF1, BC, BC1, D, D1
      EXTERNAL ERROR, ERROR1, INMI, SCALE, HANDLE, HANLE1
      EXTERNAL STEPS, NLEQS
      INTEGER NU, K, NX, NV, N(MMAX), KMAX
      INTEGER KINIT
      REAL ERRPAR(2), HFRACT
      LOGICAL XPOLY
      DOUBLE PRECISION U(1), X(1), V(1), TSTART, TSTOP, DT
      DOUBLE PRECISION BETA, GAMMA, DELTA
      COMMON /CSTAK/ DS
      DOUBLE PRECISION DS(500)
      EXTERNAL D90STE, D90STH
      INTEGER ISTKGT, IS(1000), IUOLD, IVOLD
      REAL RS(1000)
      LOGICAL LS(1000)
      DOUBLE PRECISION WS(500)
      EQUIVALENCE (DS(1), WS(1), RS(1), IS(1), LS(1))
C THE BASIC POSTS SOLVER.
C SCRATCH SPACE ALLOCATED -
C      S(D90STS) <= 2*MGQ +
C                   MAX ( 17*MGQ, NU*(NX-K) + NV + S(D90STX) )
C LONG REAL WORDS.
C U(NX-K,NU),X(NX),V(NV),
      CALL ENTER(1)
C THE SOLUTION IS (V,U).
      IVOLD = ISTKGT(NU*(NX-K)+NV, 4)
      IUOLD = IVOLD+NV
      IF (NU .GT. 0) CALL MOVEFD(NU*(NX-K), U, WS(IUOLD))
      IF (NV .GT. 0) CALL MOVEFD(NV, V, WS(IVOLD))
      CALL D90STX(TSTART, TSTOP, STEPS, NLEQS, X, AF, AF1, BC, BC1, D,
     1   D1, BETA, GAMMA, DELTA, WS(IVOLD), NU*(NX-K)+NV, DT, N, KMAX,
     2   MMAX, XPOLY, D90STE, ERROR, ERROR1, ERRPAR, INMI, SCALE,
     3   D90STH, HANDLE, HANLE1, 0.9E0, HFRACT, KINIT)
      IF (NU .GT. 0) CALL MOVEFD(NU*(NX-K), WS(IUOLD), U)
      IF (NV .GT. 0) CALL MOVEFD(NV, WS(IVOLD), V)
      CALL LEAVE
      RETURN
      END
