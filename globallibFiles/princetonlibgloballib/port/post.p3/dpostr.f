      SUBROUTINE DPOSTR(U, NU, K, X, NX, V, NV, TSTART, TSTOP, DT,
     1   AF, BC, D, ERROR, ERRPAR, INMI, SCALE, HANDLE)
      EXTERNAL AF, BC, D, ERROR, INMI, SCALE
      EXTERNAL HANDLE
      INTEGER NU, K, NX, NV
      REAL ERRPAR(2)
      DOUBLE PRECISION U(1), X(1), V(1), TSTART, TSTOP, DT
      INTEGER MGQ, NERROR, MAX0, I, N(100), KEEJAC
      INTEGER IMGQ, KMAX, MMAX, IZAP, NERR, SAVEB
      INTEGER KINIT, MINIT, MAXIT
      REAL HFRACT, RZAP, EGIVE
      LOGICAL USENFD, USENGJ, USENNS, ERPUTS, LZAP, XPOLY
      DOUBLE PRECISION BETA, FZAP, T0, T1, GAMMA, DELTA
      DOUBLE PRECISION THETA
C THE ROUTINE LEVEL OF POST.
C SCRATCH SPACE ALLOCATED -
C     S(DPOST3) = 10*NU**2 + 8*NU + 2*NU*(NV+1) + S(D9OSTS) +
C                 IF ( KEEPJAC > 0 ) { 2*K*MGQ*(NX-2*K+1) }
C LONG REAL WORDS +
C                 MMAX
C INTEGER WORDS.
C U(NX-K,NU),X(NX),V(NV).
      CALL ENTER(1)
C RETRIEVE THE VALUES TO BE USED.
      CALL DPOSTW(-1, THETA, RZAP, IZAP, LZAP)
      CALL DPOSTW(-2, BETA, RZAP, IZAP, LZAP)
      CALL DPOSTW(-3, GAMMA, RZAP, IZAP, LZAP)
      CALL DPOSTW(-4, DELTA, RZAP, IZAP, LZAP)
      CALL DPOSTW(-1001, FZAP, HFRACT, IZAP, LZAP)
      CALL DPOSTW(-1002, FZAP, EGIVE, IZAP, LZAP)
      CALL DPOSTW(-2001, FZAP, RZAP, KEEJAC, LZAP)
      CALL DPOSTW(-2002, FZAP, RZAP, MINIT, LZAP)
      CALL DPOSTW(-2003, FZAP, RZAP, MAXIT, LZAP)
      CALL DPOSTW(-2004, FZAP, RZAP, KMAX, LZAP)
      CALL DPOSTW(-2005, FZAP, RZAP, KINIT, LZAP)
      CALL DPOSTW(-2006, FZAP, RZAP, MMAX, LZAP)
      CALL DPOSTW(-2007, FZAP, RZAP, MGQ, LZAP)
      CALL DPOSTW(-2008, FZAP, RZAP, SAVEB, LZAP)
      CALL DPOSTW(-3001, FZAP, RZAP, IZAP, XPOLY)
      CALL DPOSTW(-3002, FZAP, RZAP, IZAP, ERPUTS)
      CALL DPOSTW(-3003, FZAP, RZAP, IZAP, USENGJ)
      CALL DPOSTW(-3004, FZAP, RZAP, IZAP, USENNS)
      CALL DPOSTW(-3005, FZAP, RZAP, IZAP, USENFD)
C TEST FOR ERRORS.
C/6S
C     IF (KMAX .LT. 1) CALL SETERR(18HDPOST4 - KMAX.LT.1, 18, 13, 2)
C     IF (MMAX .LT. KMAX+2) CALL SETERR(23HDPOST4 - MMAX.LT.KMAX+2, 23
C    1   , 23, 2)
C/7S
      IF (KMAX .LT. 1) CALL SETERR('DPOST4 - KMAX.LT.1', 18, 13, 2)
      IF (MMAX .LT. KMAX+2) CALL SETERR('DPOST4 - MMAX.LT.KMAX+2', 23
     1   , 23, 2)
C/
      DO  1 I = 1, MMAX
         CALL DPOSTW(-(I+4000), FZAP, RZAP, N(I), LZAP)
   1     CONTINUE
C TEST N FOR MONOTONICITY.
      DO  2 I = 2, MMAX
C/6S
C        IF (N(I) .LE. N(I-1)) CALL SETERR(
C    1      37HDPOST4 - N IS NOT MONOTONE INCREASING, 37, 25, 2)
C/7S
         IF (N(I) .LE. N(I-1)) CALL SETERR(
     1      'DPOST4 - N IS NOT MONOTONE INCREASING', 37, 25, 2)
C/
   2     CONTINUE
      T0 = TSTART
      T1 = TSTOP
      IMGQ = MAX0(K-1, MGQ)
         GOTO  4
   3     IMGQ = IMGQ+1
   4     IF (IMGQ .GT. MAX0(K, MGQ)) GOTO  5
C LOOP TILL GQ WORKS.
         CALL DPOST4(U, NU, K, X, NX, V, NV, T0, T1, DT, AF, BC, D,
     1      THETA, KEEJAC, MINIT, MAXIT, IMGQ, BETA, GAMMA, DELTA, N,
     2      MMAX, HFRACT, EGIVE, SAVEB, KMAX, XPOLY, KINIT, ERROR,
     3      ERRPAR, ERPUTS, INMI, SCALE, HANDLE)
         IF (NERROR(NERR) .NE. 1011) GOTO  5
         CALL ERROFF
         T0 = T1
         T1 = TSTOP
         GOTO  3
   5  TSTOP = T1
      CALL LEAVE
      RETURN
      END
