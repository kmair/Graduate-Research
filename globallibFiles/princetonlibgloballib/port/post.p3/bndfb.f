      SUBROUTINE BNDFB(N, ML, M, L, U, INT, NB, B)
      INTEGER M, N, NB, ML
      INTEGER INT(N)
      REAL L(N, ML), U(N, M), B(N, NB)
      INTEGER NERR
C TO SOLVE L*U*X = B, WHERE L AND U RESULT FROM A CALL TO  BNDS.
C MNEMONIC - BAND FORWARD ELIMINATION AND
C            BACK-SOLVE.
C INPUT -
C   N   - THE ORDER OF THE SYSTEM.
C   ML  - THE NUMBER OF NONZERO ENTRIES OF L ON AND BELOW
C         THE DIAGONAL.
C   M   - THE NUMBER OF NONZERO ELEMENTS OF U ON AND ABOVE
C         THE DIAGONAL.
C   L   - THE LOWER TRIANGULAR BANDED FACTOR.
C   U   - THE UPPER TRIANGULAR BANDED FACTOR.
C   INT - THE ORDERING OF THE ROWS OF THE SYSTEM, DUE TO PIVOTING.
C   NB  - THE NUMBER OF RIGHT-HAND-SIDES.
C   B   - THE RIGHT-HAND-SIDES.
C OUTPUT -
C   B - THE SOLUTION VECTORS.
C SCRATCH SPACE ALLOCATED - NONE.
C ERROR STATES -
C   1 - N.LT.1.
C   2 - ML.LT.1.
C   3 - M.LT.ML.
C   4 - NB.LT.1.
C L(N,ML-1).
C CHECK THE INPUT FOR ERRORS.
C/6S
C     IF (N .LT. 1) CALL SETERR(15H BNDFB - N.LT.1, 15, 1, 2)
C     IF (ML .LT. 1) CALL SETERR(16H BNDFB - ML.LT.1, 16, 2, 2)
C     IF (M .LT. ML) CALL SETERR(16H BNDFB - M.LT.ML, 16, 3, 2)
C     IF (NB .LT. 1) CALL SETERR(16H BNDFB - NB.LT.1, 16, 4, 2)
C/7S
      IF (N .LT. 1) CALL SETERR(' BNDFB - N.LT.1', 15, 1, 2)
      IF (ML .LT. 1) CALL SETERR(' BNDFB - ML.LT.1', 16, 2, 2)
      IF (M .LT. ML) CALL SETERR(' BNDFB - M.LT.ML', 16, 3, 2)
      IF (NB .LT. 1) CALL SETERR(' BNDFB - NB.LT.1', 16, 4, 2)
C/
C PROTECT AGAINST AN EXISTING ERROR STATE.
      CALL ENTSRC(NERR, 0)
C DO THE FORWARD-ELIMINATION.
      CALL BNDFE(N, ML, L, INT, NB, B)
C DO THE BACK-SUBSTITUTION.
      CALL BNDBS(N, M, U, NB, B)
      RETURN
      END
