      SUBROUTINE DGLSBD(K, NX, NU, NRHS, NRHSG, BC, E, CC, GAM,
     1   GETJAC, G, B)
      INTEGER NU
      INTEGER K, NX, NRHS, NRHSG, BC(NU, 2, 2), E(NU, 2, 2)
      LOGICAL GETJAC
      DOUBLE PRECISION CC(NU, NU, 2), GAM(1, 1, 1), G(1, 1), B(1, 1)
      INTEGER I
C MNEMONIC - DOUBLE PRECISION GALERKIN'S METHOD FOR LINEAR SYSTEMS,
C            BOUNDARY CONDITIONS ( DIRICHLET ).
C SCRATCH SPACE ALLOCATED - NONE.
C LONG REAL GAM((NX-K)*NU,NRHS,2),G((NX-K)*NU,2*K*NU-1),B((NX-K)*NU,NRHS
C)
C CHECK THE INPUT FOR ERRORS.
C/6S
C     IF (K .LT. 2) CALL SETERR(15HDGLSBD - K.LT.2, 15, 1, 2)
C     IF (NX .LT. 2*K) CALL SETERR(18HDGLSBD - NX.LT.2*K, 18, 2, 2)
C     IF (NU .LT. 1) CALL SETERR(16HDGLSBD - NU.LT.1, 16, 3, 2)
C     IF (NRHS .LT. 1) CALL SETERR(18HDGLSBD - NRHS.LT.1, 18, 4, 2)
C     IF (NRHSG .LT. 0) CALL SETERR(19HDGLSBD - NRHSG.LT.0, 19, 5, 2)
C/7S
      IF (K .LT. 2) CALL SETERR('DGLSBD - K.LT.2', 15, 1, 2)
      IF (NX .LT. 2*K) CALL SETERR('DGLSBD - NX.LT.2*K', 18, 2, 2)
      IF (NU .LT. 1) CALL SETERR('DGLSBD - NU.LT.1', 16, 3, 2)
      IF (NRHS .LT. 1) CALL SETERR('DGLSBD - NRHS.LT.1', 18, 4, 2)
      IF (NRHSG .LT. 0) CALL SETERR('DGLSBD - NRHSG.LT.0', 19, 5, 2)
C/
C PROTECT AGAINST AN EXISTING ERROR STATE.
      CALL ENTSRC(I, 0)
      CALL D6LSBD(K, NX, NU, NRHS, NRHSG, BC, E, CC, GAM, GETJAC, G, B
     1   , (NX-K)*NU, 2*K*NU-1)
      RETURN
      END
