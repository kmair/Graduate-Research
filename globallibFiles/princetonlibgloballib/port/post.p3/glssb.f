      SUBROUTINE GLSSB(ALFA, BETA, GAMMA, NU, NRHS, AA, BB, CC,
     1   SGAMAD, SGAMAM, BC)
      INTEGER NRHS, NU
      INTEGER BC(NU, 2)
      REAL ALFA(NU, NU), BETA(NU, NU), GAMMA(NU, NRHS), AA(NU, NU), BB(
     1   NU, NU), CC(NU, NU)
      REAL SGAMAD(NU, NRHS), SGAMAM(NU, NRHS)
      COMMON /CSTAK/ DS
      DOUBLE PRECISION DS(500)
      INTEGER IED, IEM, ISTKGT, NERROR, IPIVOT, I
      INTEGER J, NERR, IA, IB, IC, IG
      INTEGER IDIAG, IS(1000), NDEQS, NMEQS
      REAL RS(1000), WS(500)
      LOGICAL ALLERO, ALFERO, LS(1000)
      INTEGER TEMP1
      LOGICAL TEMP
      EQUIVALENCE (DS(1), WS(1), RS(1), IS(1), LS(1))
C TO CONVERT GENERAL LINEAR BC'S INTO STANDARD BC'S.
C MNEMONIC - GALERKIN'S METHOD FOR LINEAR SYSTEMS,
C            STANDARD BOUNDARY CONDITIONS.
C SCRATCH SPACE ALLOCATED -
C       S( GLSSB) <= 4*NU
C   INTEGER WORDS +
C       NU*(2*NU+NRHS+2)
C   REAL WORDS.
C/6S
C     IF (NU .LT. 1) CALL SETERR(16H GLSSB - NU.LT.1, 16, 1, 2)
C     IF (NRHS .LT. 1) CALL SETERR(18H GLSSB - NRHS.LT.1, 18, 2, 2)
C/7S
      IF (NU .LT. 1) CALL SETERR(' GLSSB - NU.LT.1', 16, 1, 2)
      IF (NRHS .LT. 1) CALL SETERR(' GLSSB - NRHS.LT.1', 18, 2, 2)
C/
      CALL ENTER(1)
C THE DEFAULT IS NO BOUNDARY CONDITIONS AT ALL.
      CALL SETR(NU**2, 0E0, AA)
      CALL SETR(NU**2, 0E0, BB)
      CALL SETR(NU**2, 0E0, CC)
      CALL SETR(NU*NRHS, 0E0, SGAMAD)
      CALL SETR(NU*NRHS, 0E0, SGAMAM)
      CALL SETI(2*NU, -2, BC)
C SPACE FOR THE DIRICHLET EQUATION NUMBERS.
      IED = ISTKGT(NU, 2)
C SPACE FOR THE MIXED EQUATION NUMBERS.
      IEM = ISTKGT(NU, 2)
      NDEQS = 0
      NMEQS = 0
C FIND THE EQUATIONS FOR EACH.
      DO  5 I = 1, NU
         ALLERO = .TRUE.
         DO  3 J = 1, NU
            TEMP = ALFA(I, J) .EQ. 0.
            IF (TEMP) TEMP = BETA(I, J) .EQ. 0.
            ALFERO = TEMP
            ALLERO = ALLERO .AND. ALFERO
            IF (BETA(I, J) .EQ. 0.) GOTO 1
               NMEQS = NMEQS+1
C THEN MIXED.
               TEMP1 = IEM-1+NMEQS
               IS(TEMP1) = I
               GOTO  4
   1        TEMP = J .EQ. NU
            IF (TEMP) TEMP = .NOT. ALLERO
            IF (.NOT. TEMP) GOTO 2
               NDEQS = NDEQS+1
C THEN DIRICHLET.
               TEMP1 = IED-1+NDEQS
               IS(TEMP1) = I
   2        CONTINUE
   3        CONTINUE
C END J.
   4     CONTINUE
   5     CONTINUE
C END I.
      IF (NMEQS .LE. 0) GOTO 7
         IA = ISTKGT(NMEQS*NU, 3)
C CONVERT THE MIXED BC'S.
         IB = ISTKGT(NMEQS*NU, 3)
         IG = ISTKGT(NMEQS*NRHS, 3)
         IPIVOT = ISTKGT(NU, 2)
         IDIAG = ISTKGT(NU, 3)
         CALL A6LSSM(ALFA, BETA, GAMMA, NU, NRHS, AA, BB, SGAMAM, BC(1
     1      , 2), WS(IA), WS(IB), WS(IG), IS(IEM), NMEQS, IS(IPIVOT),
     2      WS(IDIAG))
         CALL ISTKRL(5)
         IF (NERROR(NERR) .EQ. 0) GOTO 6
            CALL LEAVE
            RETURN
   6     CONTINUE
   7  IF (NDEQS .LE. 0) GOTO 8
         IC = ISTKGT(NDEQS*NU, 3)
C CONVERT THE DIRICHLET EQUATIONS.
         IG = ISTKGT(NDEQS*NRHS, 3)
         IPIVOT = ISTKGT(NU, 2)
         IDIAG = ISTKGT(NU, 3)
         CALL A6LSSD(ALFA, GAMMA, NU, NRHS, CC, SGAMAD, BC(1, 1), WS(IC)
     1      , WS(IG), IS(IED), NDEQS, IS(IPIVOT), WS(IDIAG))
   8  CALL LEAVE
      RETURN
      END
